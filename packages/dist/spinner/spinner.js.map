{"version":3,"sources":["../../src/src/spinner/spinner.js"],"names":["CSS_CLASSES","block","placeholder","animation","visible","small","regular","medium","large","fab","raised","permanent","singleColor","animated","typeClasses","classForType","mode","show","ctrl","opts","isTransitioning","el","showClass","then","hide","afterHide","style","display","redraw","notifyState","percentage","getPercentage","createView","tag","props","class","type","join","id","config","inited","context","vdom","setTimeout","events","content","z","before","after","delay","value","isNaN","parseFloat","component","controller","view","undefined","showDelay","hideDelay"],"mappings":"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","file":"spinner.js","sourcesContent":["import '../common/object.assign';\nimport m from 'mithril';\nimport transition from '../common/transition';\nimport shadow from '../shadow/shadow';\nimport './theme/common/theme';\n\nconst CSS_CLASSES = {\n    block: 'pe-spinner',\n    placeholder: 'pe-spinner--placeholder',\n    animation: 'pe-spinner__animation',\n    visible: 'pe-spinner--visible',\n    small: 'pe-spinner--small',\n    regular: 'pe-spinner--regular',\n    medium: 'pe-spinner--medium',\n    large: 'pe-spinner--large',\n    fab: 'pe-spinner--fab',\n    raised: 'pe-spinner--raised',\n    permanent: 'pe-spinner--permanent',\n    singleColor: 'pe-spinner--single-color',\n    animated: 'pe-spinner--animated'\n};\n\nconst typeClasses = {\n    small: CSS_CLASSES.small,\n    regular: CSS_CLASSES.regular,\n    medium: CSS_CLASSES.medium,\n    large: CSS_CLASSES.large,\n    fab: CSS_CLASSES.fab\n};\n\nconst classForType = (mode = 'regular') => {\n    return typeClasses[mode];\n};\n\nconst show = (ctrl, opts) => {\n    if (ctrl.isTransitioning) {\n        return;\n    }\n    ctrl.isTransitioning = true;\n    return transition.show(Object.assign(\n        {},\n        opts, {\n            el: ctrl.el,\n            showClass: CSS_CLASSES.visible\n        }\n    )).then(() => {\n        ctrl.isTransitioning = false;\n        ctrl.visible = true;\n    });\n};\n\nconst hide = (ctrl, opts) => {\n    if (ctrl.isTransitioning) {\n        return;\n    }\n    ctrl.isTransitioning = true;\n    return transition.hide(Object.assign(\n        {},\n        opts, {\n            el: ctrl.el,\n            afterHide: () => (ctrl.el.style.display = 'none'),\n            showClass: CSS_CLASSES.visible\n        }\n    )).then(() => {\n        ctrl.isTransitioning = false;\n        ctrl.visible = false;\n        ctrl.hide = false;\n        m.redraw(); // removes remainder of drawn component\n    });\n};\n\nconst notifyState = (ctrl, opts) => {\n    if (opts.percentage && opts.getPercentage) {\n        let percentage;\n        if (typeof opts.percentage === 'function') {\n            percentage = opts.percentage();\n        } else {\n            percentage = opts.percentage;\n        }\n        opts.getPercentage(percentage, ctrl, opts);\n    }\n};\n\nconst createView = (ctrl, opts = {}) => {\n    const tag = opts.tag || 'div';\n    const props = Object.assign({},\n        {\n            class: [\n                CSS_CLASSES.block,\n                classForType(opts.type),\n                (opts.singleColor ? CSS_CLASSES.singleColor: null),\n                (opts.raised ? CSS_CLASSES.raised : null),\n                (opts.animated ? CSS_CLASSES.animated : null),\n                (opts.permanent ? CSS_CLASSES.permanent : null),\n                opts.class\n            ].join(' '),\n            id: opts.id || '',\n            config: (el, inited, context, vdom) => {\n                if (inited) return;\n                if (opts.config) {\n                    opts.config(el, inited, context, vdom);\n                }\n                ctrl.el = el;\n\n                notifyState(ctrl, opts);\n\n                if (!opts.permanent) {\n                    setTimeout(() => {\n                        show(ctrl, opts);\n                    }, 0);\n                }\n\n            },\n        },\n        opts.events ? opts.events : null\n    );\n\n    notifyState(ctrl, opts);\n\n    if (ctrl.hide) {\n        setTimeout(() => {\n            hide(ctrl, opts);\n        }, 0);\n    }\n\n    const content = [\n        opts.raised && opts.content ? m(shadow, {\n            z: opts.z\n        }) : null,\n        opts.content || m('div', {class: CSS_CLASSES.animation}, 'Specific spinner missing')\n    ];\n\n    return m(tag, props, [opts.before, content, opts.after]);\n};\n\nconst delay = (opts, mode) => {\n    const value = opts[mode];\n    return ((value !== true) && !isNaN(value))\n        ? parseFloat(value, 10) * 1000\n        : false;\n};\n\nconst component = {\n    controller: (opts = {}) => {\n        return {\n            el: null,\n            isTransitioning: false,\n            visible: opts.permanent || false,\n            hide: false,\n            percentage: 0\n        };\n    },\n    view: (ctrl, opts = {}) => {\n        if (!ctrl.visible) {\n            if ((opts.hide !== undefined && !opts.hide) || opts.show) {\n                const showDelay = delay(opts, 'show');\n                if (showDelay) {\n                    setTimeout(() => (ctrl.visible = true, m.redraw()), showDelay);\n                } else {\n                    ctrl.visible = true;\n                }\n            }\n        } else {\n            if ((opts.show !== undefined && !opts.show) || opts.hide) {\n                const hideDelay = delay(opts, 'hide');\n                if (hideDelay) {\n                    setTimeout(() => (ctrl.hide = true, m.redraw()), hideDelay);\n                } else {\n                    ctrl.hide = true;\n                }\n            }\n        }\n        if (ctrl.visible) {\n            return createView(ctrl, opts);\n        } else {\n            return m('span', {class: CSS_CLASSES.placeholder});\n        }\n    }\n};\n\nexport default component;\n"]}