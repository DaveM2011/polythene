{"version":3,"sources":["../../src/src/search/search.js"],"names":["CSS_CLASSES","block","content","searchInset","searchFullwidth","mapButtonState","state","focus","dirty","typeClasses","inset","fullwidth","classForType","mode","createView","ctrl","opts","tag","props","class","type","join","id","config","events","buttons","textfieldOpts","textfield","before","getState","after","component","controller","prop","view"],"mappings":";;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,cAAc;AAChBC,WAAO,WADS;AAEhBC,aAAS,oBAFO;AAGhBC,iBAAa,kBAHG;AAIhBC,qBAAiB;AAJD,CAApB;;AAOA,IAAMC,iBAAiB,SAAjBA,cAAiB,GAAgB;AAAA,QAAfC,KAAe,uEAAP,EAAO;;AACnC,QAAIA,MAAMC,KAAN,IAAeD,MAAME,KAAzB,EAAgC;AAC5B,eAAO,aAAP;AACH,KAFD,MAEO,IAAIF,MAAMC,KAAV,EAAiB;AACpB,eAAO,OAAP;AACH,KAFM,MAEA,IAAID,MAAME,KAAV,EAAiB;AACpB,eAAO,OAAP;AACH;AACD,WAAO,MAAP;AACH,CATD;;AAWA,IAAMC,cAAc;AAChBC,WAAOV,YAAYG,WADH;AAEhBQ,eAAWX,YAAYI;AAFP,CAApB;;AAKA,IAAMQ,eAAe,SAAfA,YAAe,GAAoB;AAAA,QAAnBC,IAAmB,uEAAZ,OAAY;;AACrC,WAAOJ,YAAYI,IAAZ,CAAP;AACH,CAFD;;AAIA,IAAMC,aAAa,SAAbA,UAAa,CAACC,IAAD,EAAqB;AAAA,QAAdC,IAAc,uEAAP,EAAO;;AACpC,QAAMC,MAAMD,KAAKC,GAAL,IAAY,KAAxB;AACA,QAAMC,QAAQ,SAAc,EAAd,EACV;AACIC,eAAO,CACHnB,YAAYC,KADT,EAEHW,aAAaI,KAAKI,IAAlB,CAFG,EAGHJ,KAAKG,KAHF,EAILE,IAJK,CAIA,GAJA,CADX;AAMIC,YAAIN,KAAKM,EAAL,IAAW,EANnB;AAOIC,gBAAQP,KAAKO;AAPjB,KADU,EAUVP,KAAKQ,MAAL,GAAcR,KAAKQ,MAAnB,GAA4B,IAVlB,CAAd;AAYA,QAAMlB,QAAQD,eAAeU,KAAKT,KAAL,EAAf,CAAd;AACA,QAAMmB,UAAU,CAACT,KAAKS,OAAL,IAAgB,EAAjB,EAAqBnB,KAArB,KAA+B,EAA/C;AACA,QAAMoB,gBAAgBV,KAAKW,SAAL,IAAkB,EAAxC;AACA,QAAMzB,UAAU,uBAAE,KAAF,EAAS;AACrBiB,eAAOnB,YAAYE;AADE,KAAT,EAEb,CACCuB,QAAQG,MAAR,GAAiBH,QAAQG,MAAzB,GAAkC,IADnC,EAEC,4CAAa,SAAc,EAAd,EAAkBF,aAAlB,EAAiC;AAC1CG,kBAAU,kBAACvB,KAAD,EAAW;AACjBS,iBAAKT,KAAL,CAAWA,KAAX;AACA,gBAAIoB,cAAcG,QAAlB,EAA4B;AACxBH,8BAAcG,QAAd,CAAuBvB,KAAvB;AACH;AACJ;AANyC,KAAjC,CAAb,CAFD,EAUCmB,QAAQK,KAAR,GAAgBL,QAAQK,KAAxB,GAAgC,IAVjC,CAFa,CAAhB;AAcA,WAAO,uBAAEb,GAAF,EAAOC,KAAP,EAAc,CAACF,KAAKY,MAAN,EAAc1B,OAAd,EAAuBc,KAAKc,KAA5B,CAAd,CAAP;AACH,CAhCD;;AAkCA,IAAMC,YAAY;AACdC,gBAAY,sBAAM;AACd,YAAM1B,QAAQ,kBAAE2B,IAAF,EAAd;AACA,eAAO;AACH3B;AADG,SAAP;AAGH,KANa;AAOd4B,UAAM,cAACnB,IAAD,EAAqB;AAAA,YAAdC,IAAc,uEAAP,EAAO;;AACvB,eAAOF,WAAWC,IAAX,EAAiBC,IAAjB,CAAP;AACH;AATa,CAAlB;;kBAYee,S","file":"search.js","sourcesContent":["import '../common/object.assign';\nimport m from 'mithril';\nimport textfield from '../textfield/textfield';\nimport './theme';\n\nconst CSS_CLASSES = {\n    block: 'pe-search',\n    content: 'pe-search__content',\n    searchInset: 'pe-search--inset',\n    searchFullwidth: 'pe-search--fullwidth'\n};\n\nconst mapButtonState = (state = {}) => {\n    if (state.focus && state.dirty) {\n        return 'focus_dirty';\n    } else if (state.focus) {\n        return 'focus';\n    } else if (state.dirty) {\n        return 'dirty';\n    }\n    return 'none';\n};\n\nconst typeClasses = {\n    inset: CSS_CLASSES.searchInset,\n    fullwidth: CSS_CLASSES.searchFullwidth\n};\n\nconst classForType = (mode = 'inset') => {\n    return typeClasses[mode];\n};\n\nconst createView = (ctrl, opts = {}) => {\n    const tag = opts.tag || 'div';\n    const props = Object.assign({},\n        {\n            class: [\n                CSS_CLASSES.block,\n                classForType(opts.type),\n                opts.class\n            ].join(' '),\n            id: opts.id || '',\n            config: opts.config\n        },\n        opts.events ? opts.events : null\n    );\n    const state = mapButtonState(ctrl.state());\n    const buttons = (opts.buttons || {})[state] || {};\n    const textfieldOpts = opts.textfield || {};\n    const content = m('div', {\n        class: CSS_CLASSES.content\n    }, [\n        buttons.before ? buttons.before : null,\n        m(textfield, Object.assign({}, textfieldOpts, {\n            getState: (state) => {\n                ctrl.state(state);\n                if (textfieldOpts.getState) {\n                    textfieldOpts.getState(state);\n                }\n            }\n        })),\n        buttons.after ? buttons.after : null\n    ]);\n    return m(tag, props, [opts.before, content, opts.after]);\n};\n\nconst component = {\n    controller: () => {\n        const state = m.prop();\n        return {\n            state\n        };\n    },\n    view: (ctrl, opts = {}) => {\n        return createView(ctrl, opts);\n    }\n};\n\nexport default component;\n"]}