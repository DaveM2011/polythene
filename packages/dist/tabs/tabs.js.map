{"version":3,"sources":["../../src/src/tabs/tabs.js"],"names":["CSS_CLASSES","block","scrollButton","scrollButtonLeft","scrollButtonRight","scrollButtonOffset","tabRow","tabRowCentered","tabRowIndent","tab","tabContent","tabHasIcon","indicator","scrollable","isAutofit","isAtStart","isAtEnd","isMenu","isSmall","activeSelected","label","POSITION_LEFT","POSITION_RIGHT","getNewIndex","index","tabs","minTabIndex","maxTabIndex","length","left","Math","max","right","min","handleScrollButtonClick","ctrl","opts","e","direction","stopPropagation","preventDefault","currentTabIndex","selectedTabIndex","newIndex","scrollToTab","setSelectedTab","redraw","createScrollButton","position","scrollIconForward","arrowForward","scrollIconBackward","arrowBackward","class","join","icon","ripple","center","config","el","scrollButtonLeftEl","scrollButtonRightEl","events","onclick","alignToTitle","firstTab","firstInnerLabel","querySelector","firstOuterLabelWidth","getBoundingClientRect","width","firstInnerLabelWidth","firstTabOffset","style","marginLeft","createRightButtonOffset","scrollButtonRightWidth","scrollButtonOffsetEl","tabsEl","tabIndex","scroller","scrollerEl","tabLeft","slice","reduce","totalWidth","tabData","scrollerWidth","scrollingWidth","scrollWidth","maxScroll","currentLeft","scrollLeft","duration","abs","tabs_scroll_speed","delaySeconds","tabs_scroll_delay","setTimeout","element","to","tabs_scroll_min_duration","updateScrollButtons","isAtLeft","isAtRight","scrollButtonStates","animateIndicator","selectedTabEl","animate","parentRect","rect","tabIndicatorEl","translateX","transformCmd","indicator_slide_min_duration","transform","managesScroll","getState","data","createTab","buttonOpts","tabButtonOptions","content","wash","noIndicatorSlide","inited","push","sortNumbers","a","b","createView","tag","autofit","centered","selectedTab","undefined","previousOptsSelectedTab","props","menu","small","id","context","largestWidth","widths","map","largest","sort","reverse","forEach","isTouch","onResize","subscribe","onunload","unsubscribe","buttons","buttonOptsCombined","selected","animateOnTap","tabsOpts","concat","tabIndicator","hideIndicator","onscroll","before","after","component","controller","view"],"mappings":";;;;;;kQAQ6B;;;AAR7B;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc;AAChBC,WAAO,SADS;AAEhBC,kBAAc,wBAFE;AAGhBC,sBAAkB,+BAHF;AAIhBC,uBAAmB,6BAJH;AAKhBC,wBAAoB,gCALJ;AAMhBC,YAAQ,cANQ;AAOhBC,oBAAgB,wBAPA;AAQhBC,kBAAc,sBARE;AAShBC,SAAK,cATW;AAUhBC,gBAAY,sBAVI;AAWhBC,gBAAY,qBAXI;AAYhBC,eAAW,oBAZK;AAahBC,gBAAY,qBAbI;AAchBC,eAAW,kBAdK;AAehBC,eAAW,gBAfK;AAgBhBC,aAAS,cAhBO;AAiBhBC,YAAQ,eAjBQ;AAkBhBC,aAAS,gBAlBO;AAmBhBC,oBAAgB,0BAnBA;AAoBhB;AACAC,WAAO;AArBS,CAApB;;AAwBA,IAAMC,gBAAiB,KAAK,CAA5B;AACA,IAAMC,iBAAkB,KAAK,CAA7B;;AAEA,IAAMC,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACjC,QAAMC,cAAc,CAApB;AACA,QAAMC,cAAcF,KAAKG,MAAL,GAAc,CAAlC;AACA,WAAO;AACHC,cAAMC,KAAKC,GAAL,CAASP,QAAQ,CAAjB,EAAoBE,WAApB,CADH;AAEHM,eAAOF,KAAKG,GAAL,CAAST,QAAQ,CAAjB,EAAoBG,WAApB;AAFJ,KAAP;AAIH,CAPD;;AASA,IAAMO,0BAA0B,SAA1BA,uBAA0B,CAACC,IAAD,EAAOC,IAAP,EAAaC,CAAb,EAAgBC,SAAhB,EAA8B;AAC1DD,MAAEE,eAAF;AACAF,MAAEG,cAAF;AACA,QAAMf,OAAOU,KAAKV,IAAlB;AACA,QAAMgB,kBAAkBN,KAAKO,gBAA7B;AACA,QAAMC,WAAWpB,YAAYkB,eAAZ,EAA6BhB,IAA7B,EAAmCa,SAAnC,CAAjB;AACAM,gBAAYT,IAAZ,EAAkBQ,QAAlB;AACA,QAAIA,aAAaF,eAAjB,EAAkC;AAC9BI,uBAAeV,IAAf,EAAqBC,IAArB,EAA2BO,QAA3B,EAAqC,IAArC;AACA,0BAAEG,MAAF;AACH;AACJ,CAXD;;AAcA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACZ,IAAD,EAAOa,QAAP,EAAiBZ,IAAjB,EAA0B;AACjD,QAAMa,oBAAoBb,KAAKa,iBAAL,IAA0B,gBAAMC,YAA1D;AACA,QAAMC,qBAAqBf,KAAKe,kBAAL,IAA2B,gBAAMC,aAA5D;;AAEA,WAAO,6CAAW;AACdC,eAAO,CACHrD,YAAYE,YADT,EAEF8C,aAAa3B,aAAb,GAA6BrB,YAAYG,gBAAzC,GAA4DH,YAAYI,iBAFtE,EAGLkD,IAHK,CAGA,GAHA,CADO;AAKdC,cAAMP,aAAa3B,aAAb,GAA6B8B,kBAA7B,GAAkDF,iBAL1C;AAMdO,gBAAQ;AACJC,oBAAQ;AADJ,SANM;AASdC,gBAAQ,gBAACC,EAAD,EAAQ;AACZ,gBAAIxB,KAAKyB,kBAAL,IAA2BzB,KAAK0B,mBAApC,EAAyD;AACrD;AACH;AACD,gBAAIb,aAAa3B,aAAjB,EAAgC;AAC5Bc,qBAAKyB,kBAAL,GAA0BD,EAA1B;AACH,aAFD,MAEO;AACHxB,qBAAK0B,mBAAL,GAA2BF,EAA3B;AACH;AACJ,SAlBa;AAmBdG,gBAAQ;AACJC,qBAAUf,aAAa3B,aAAd,GAA+B,UAACgB,CAAD,EAAO;AAC3CH,wCAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,CAApC,EAAuC,MAAvC;AACH,aAFQ,GAEL,UAACA,CAAD,EAAO;AACPH,wCAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,CAApC,EAAuC,OAAvC;AACH;AALG;AAnBM,KAAX,CAAP;AA2BH,CA/BD;;AAiCA,IAAM2B,eAAe,SAAfA,YAAe,CAAC7B,IAAD,EAAU;AAC3B,QAAM8B,WAAW9B,KAAKV,IAAL,CAAU,CAAV,EAAakC,EAA9B;AACA,QAAMO,kBAAkBD,SAASE,aAAT,CAAuB,MAAMnE,YAAYoB,KAAlB,GAA0B,OAAjD,CAAxB;AACA,QAAMgD,uBAAuBH,SAASI,qBAAT,GAAiCC,KAA9D;AACA,QAAMC,uBAAuBL,gBAAgBG,qBAAhB,GAAwCC,KAArE;AACA,QAAME,iBAAiB,CAACJ,uBAAuBG,oBAAxB,IAAgD,CAAvE;AACAN,aAASQ,KAAT,CAAeC,UAAf,GAA4B,CAACF,cAAD,GAAkB,IAA9C;AACH,CAPD;;AASA,IAAMG,0BAA0B,SAA1BA,uBAA0B,CAACxC,IAAD,EAAU;AACtC;AACA,QAAMyC,yBAAyBzC,KAAK0B,mBAAL,CAAyBQ,qBAAzB,GAAiDC,KAAhF;AACA,QAAMO,uBAAuB1C,KAAK2C,MAAL,CAAYX,aAAZ,CAA0B,MAAMnE,YAAYK,kBAA5C,CAA7B;AACAwE,yBAAqBJ,KAArB,CAA2BH,KAA3B,GAAmCM,yBAAyB,IAA5D;AACH,CALD;;AAOA,IAAMhC,cAAc,SAAdA,WAAc,CAACT,IAAD,EAAO4C,QAAP,EAAoB;AACpC,QAAMtD,OAAOU,KAAKV,IAAlB;AACA,QAAMuD,WAAW7C,KAAK8C,UAAtB;AACA;AACA,QAAMC,UAAUzD,KAAK0D,KAAL,CAAW,CAAX,EAAcJ,QAAd,EAAwBK,MAAxB,CAA+B,UAACC,UAAD,EAAaC,OAAb,EAAyB;AACpE,eAAOD,aAAaC,QAAQ3B,EAAR,CAAWU,qBAAX,GAAmCC,KAAvD;AACH,KAFe,EAEb,CAFa,CAAhB;AAGA;AACA;AACA;AACA,QAAMiB,gBAAgBP,SAASX,qBAAT,GAAiCC,KAAvD,CAVoC,CAU0B;AAC9D,QAAMkB,iBAAiBR,SAASS,WAAhC;AACA,QAAMC,YAAYF,iBAAiBD,aAAnC;AACA,QAAM1D,OAAOC,KAAKG,GAAL,CAASiD,OAAT,EAAkBQ,SAAlB,CAAb;AACA,QAAMC,cAAcX,SAASY,UAA7B;AACA,QAAID,gBAAgB9D,IAApB,EAA0B;AACtB,YAAMgE,WAAW/D,KAAKgE,GAAL,CAASH,cAAc9D,IAAvB,IAA+B,iBAAOkE,iBAAvD;AACA,YAAMC,eAAe,iBAAOC,iBAAP,IAA4B,CAAjD;AACAC,mBAAW,YAAM;AACb,oCAAS;AACLC,yBAASnB,QADJ;AAELoB,oBAAIvE,IAFC;AAGLgE,0BAAU/D,KAAKC,GAAL,CAAS,iBAAOsE,wBAAhB,EAA0CR,QAA1C,CAHL;AAILvD,2BAAW;AAJN,aAAT;AAMH,SAPD,EAOG0D,eAAe,IAPlB;AAQH;AACJ,CA3BD;;AA6BA,IAAMM,sBAAsB,SAAtBA,mBAAsB,CAACnE,IAAD,EAAU;AAClC,QAAM8C,aAAa9C,KAAK8C,UAAxB;AACA,QAAMW,aAAaX,WAAWW,UAA9B;AACA,QAAMnD,kBAAkBN,KAAKO,gBAA7B;AACA,QAAMjB,OAAOU,KAAKV,IAAlB;AACA,QAAMqD,SAAS3C,KAAK2C,MAApB;AACA,QAAMpD,cAAc,CAApB;AACA,QAAMC,cAAcF,KAAKG,MAAL,GAAc,CAAlC;AACA,QAAM2E,WAAYtB,WAAWW,UAAX,KAA0B,CAA3B,IAAkCnD,oBAAoBf,WAAvE;AACA,QAAM8E,YAAaZ,cAAeX,WAAWQ,WAAX,GAAyBX,OAAOT,qBAAP,GAA+BC,KAAxD,GAAgE,CAAhF,IAAwF7B,oBAAoBd,WAA9H;AACAQ,SAAKsE,kBAAL,CAAwB5E,IAAxB,GAA+B,CAAC0E,QAAhC;AACApE,SAAKsE,kBAAL,CAAwBzE,KAAxB,GAAgC,CAACwE,SAAjC;AACH,CAZD;;AAcA,IAAME,mBAAmB,SAAnBA,gBAAmB,CAACC,aAAD,EAAgBC,OAAhB,EAAyBzE,IAAzB,EAAkC;AACvD,QAAM0E,aAAa1E,KAAK2C,MAAL,CAAYT,qBAAZ,EAAnB;AACA,QAAMyC,OAAOH,cAActC,qBAAd,EAAb;AACA,QAAMI,QAAQtC,KAAK4E,cAAL,CAAoBtC,KAAlC;AACA,QAAMuC,aAAaF,KAAKjF,IAAL,GAAYgF,WAAWhF,IAAvB,GAA8BM,KAAK8C,UAAL,CAAgBW,UAAjE;AACA,QAAMqB,eAAe,eAAeD,UAAf,GAA4B,QAAjD;AACA,QAAMnB,WAAWe,UAAU,iBAAOM,4BAAjB,GAAgD,CAAjE;AACA;AACAzC,UAAMH,KAAN,GAAcwC,KAAKxC,KAAL,GAAa,IAA3B;AACAG,UAAM,qBAAN,IACIA,MAAM,6BAAN,IACAA,MAAM,0BAAN,IACAA,MAAM,wBAAN,IAAkCoB,WAAW,GAHjD;AAIApB,UAAM0C,SAAN,GACI1C,MAAM,mBAAN,IACAA,MAAM,gBAAN,IACAA,MAAM,eAAN,IACAA,MAAM,cAAN,IAAwBwC,YAJ5B;AAKH,CAlBD;;AAoBA,IAAMpE,iBAAiB,SAAjBA,cAAiB,CAACV,IAAD,EAAOC,IAAP,EAAaZ,KAAb,EAAoBoF,OAApB,EAAgC;AACnDzE,SAAKO,gBAAL,GAAwBlB,KAAxB;AACA,QAAI,CAACW,KAAKV,IAAL,CAAUG,MAAf,EAAuB;AACvB,QAAM+E,gBAAgBxE,KAAKV,IAAL,CAAUD,KAAV,EAAiBmC,EAAvC;AACA,QAAIgD,iBAAiBxE,KAAK4E,cAAtB,IAAwC5E,KAAK2C,MAAjD,EAAyD;AACrD4B,yBAAiBC,aAAjB,EAAgCC,OAAhC,EAAyCzE,IAAzC;AACH;AACD,QAAIA,KAAKiF,aAAT,EAAwB;AACpBd,4BAAoBnE,IAApB;AACAS,oBAAYT,IAAZ,EAAkBX,KAAlB;AACH;AACD,QAAIY,KAAKiF,QAAT,EAAmB;AACfjF,aAAKiF,QAAL,CAAc;AACV7F,mBAAOA,KADG;AAEV8F,kBAAMnF,KAAKV,IAAL,CAAUD,KAAV,EAAiB8F,IAFb;AAGV3D,gBAAIgD;AAHM,SAAd;AAKH;AACJ,CAlBD;;AAoBA,IAAMY,YAAY,SAAZA,SAAY,CAACpF,IAAD,EAAOC,IAAP,EAAaZ,KAAb,EAAoBgG,UAApB,EAAmC;AACjD;AACAA,eAAW1D,MAAX,GAAoB0D,WAAW1D,MAAX,IAAqB,EAAzC;AACA0D,eAAW1D,MAAX,CAAkBC,OAAlB,GAA4ByD,WAAW1D,MAAX,CAAkBC,OAAlB,IAA8B,YAAM,CAAE,CAAlE;AACA,QAAM0D,mBAAmB,SACrB,EADqB,EAErBD,UAFqB,EAGrB;AACIE,iBAAS,uBAAE,KAAF,EAAS;AACdrE,mBAAOrD,YAAYU;AADL,SAAT,EAEN,CACC8G,WAAWjE,IAAX,GAAkB,uCAAQiE,WAAWjE,IAAnB,CAAlB,GAA6C,IAD9C,EAECiE,WAAWpG,KAAX,GAAmB,uBAAE,KAAF,EAAS,EAACiC,OAAOrD,YAAYoB,KAApB,EAAT,EAAqC,uBAAE,MAAF,EAAUoG,WAAWpG,KAArB,CAArC,CAAnB,GAAuF,IAFxF,CAFM,CADb;AAOIiC,eAAO,CACHrD,YAAYS,GADT,EAEF+G,WAAWjE,IAAX,IAAmBiE,WAAWpG,KAA9B,GAAsCpB,YAAYW,UAAlD,GAA+D,IAF7D,EAGH6G,WAAWnE,KAHR,EAILC,IAJK,CAIA,GAJA,CAPX;AAYIqE,cAAM,KAZV;AAaInE,gBAAQ,IAbZ;AAcIM,gBAAQ,SACJ,EADI,EAEJ0D,WAAW1D,MAFP,EAGJ;AACIC,qBAAS,iBAAC1B,CAAD,EAAO;AACZQ,+BAAeV,IAAf,EAAqBC,IAArB,EAA2BZ,KAA3B,EAAkCY,KAAKwF,gBAAL,GAAwB,KAAxB,GAAgC,IAAlE;AACAJ,2BAAW1D,MAAX,CAAkBC,OAAlB,CAA0B1B,CAA1B;AACH;AAJL,SAHI,CAdZ;AAwBIqB,gBAAQ,gBAACC,EAAD,EAAKkE,MAAL,EAAgB;AACpB,gBAAIA,MAAJ,EAAY;AACR;AACH;AACD1F,iBAAKV,IAAL,CAAUqG,IAAV,CAAe,EAACR,MAAME,UAAP,EAAmB7D,MAAnB,EAAf;AACH;AA7BL,KAHqB,CAAzB;AAmCA,WAAO,yCAAU8D,gBAAV,CAAP;AACH,CAxCD;;AA0CA,IAAMM,cAAc,SAAdA,WAAc,CAACC,CAAD,EAAIC,CAAJ,EAAU;AAC1B,QAAID,IAAIC,CAAR,EACI,OAAO,CAAC,CAAR;AACJ,QAAID,IAAIC,CAAR,EACI,OAAO,CAAP,CADJ,KAGI,OAAO,CAAP;AACP,CAPD;;AASA,IAAMC,aAAa,SAAbA,UAAa,CAAC/F,IAAD,EAAqB;AAAA,QAAdC,IAAc,uEAAP,EAAO;;AACpC,QAAM+F,MAAM/F,KAAK+F,GAAL,IAAY,KAAxB;AACA,QAAMC,UAAWhG,KAAKvB,UAAL,IAAmBuB,KAAKiG,QAAzB,GAAqC,KAArC,GAA8CjG,KAAKgG,OAAL,GAAe,IAAf,GAAsB,KAApF;;AAEA;AACA,QAAIhG,KAAKkG,WAAL,KAAqBC,SAArB,IAAkCpG,KAAKqG,uBAAL,KAAiCpG,KAAKkG,WAA5E,EAAyF;AACrFzF,uBAAeV,IAAf,EAAqBC,IAArB,EAA2BA,KAAKkG,WAAhC,EAA6C,IAA7C;AACH;AACDnG,SAAKqG,uBAAL,GAA+BpG,KAAKkG,WAApC;;AAEA,QAAMG,QAAQ;AACVpF,eAAO,CACHrD,YAAYC,KADT,EAEFmC,KAAKvB,UAAL,GAAkBb,YAAYa,UAA9B,GAA2C,IAFzC,EAGDsB,KAAKO,gBAAL,KAA0B,CAA3B,GAAgC1C,YAAYe,SAA5C,GAAwD,IAHtD,EAIDoB,KAAKO,gBAAL,KAA0BP,KAAKV,IAAL,CAAUG,MAAV,GAAmB,CAA9C,GAAmD5B,YAAYgB,OAA/D,GAAyE,IAJvE,EAKFoB,KAAKjB,cAAL,GAAsBnB,YAAYmB,cAAlC,GAAmD,IALjD,EAMFiH,UAAUpI,YAAYc,SAAtB,GAAkC,IANhC,EAOFsB,KAAKsG,IAAL,GAAY1I,YAAYiB,MAAxB,GAAiC,IAP/B,EAQFmB,KAAKuG,KAAL,GAAa3I,YAAYkB,OAAzB,GAAmC,IARjC,EASHkB,KAAKiB,KATF,EAULC,IAVK,CAUA,GAVA,CADG;AAYVsF,YAAIxG,KAAKwG,EAAL,IAAW,EAZL;AAaVlF,gBAAQ,gBAACC,EAAD,EAAKkE,MAAL,EAAagB,OAAb,EAAyB;AAC7B,gBAAIhB,MAAJ,EAAY;AACR;AACH;AACD1F,iBAAK2C,MAAL,GAAcnB,EAAd;;AAEA,gBAAIvB,KAAK0G,YAAT,EAAuB;AACnB,oBAAMC,SAAS5G,KAAKV,IAAL,CAAUuH,GAAV,CAAc;AAAA,2BAAW1D,QAAQ3B,EAAR,CAAWU,qBAAX,GAAmCC,KAA9C;AAAA,iBAAd,CAAf;AACA,oBAAM2E,UAAUF,OAAOG,IAAP,CAAYnB,WAAZ,EAAyBoB,OAAzB,GAAmC,CAAnC,CAAhB;AACAhH,qBAAKV,IAAL,CAAU2H,OAAV,CAAkB;AAAA,2BAAW9D,QAAQ3B,EAAR,CAAWc,KAAX,CAAiBH,KAAjB,GAAyB2E,UAAU,IAA9C;AAAA,iBAAlB;AACH;;AAED;AACA,gBAAI7G,KAAKvB,UAAT,EAAqB;AACjBmD,6BAAa7B,IAAb;AACH;AACD;AACA,gBAAIC,KAAKvB,UAAL,IAAmB,CAAC,oBAAEwI,OAA1B,EAAmC;AAC/BlH,qBAAKiF,aAAL,GAAqB,IAArB;AACAzC,wCAAwBxC,IAAxB;AACH;;AAED,gBAAMmH,WAAW,SAAXA,QAAW,GAAM;AACnBzG,+BAAeV,IAAf,EAAqBC,IAArB,EAA2BD,KAAKO,gBAAhC,EAAkD,KAAlD;AACA,kCAAEI,MAAF;AACH,aAHD;AAIA,6BAAOyG,SAAP,CAAiB,QAAjB,EAA2BD,QAA3B;;AAEAT,oBAAQW,QAAR,GAAmB,YAAM;AACrB,iCAAOC,WAAP,CAAmB,QAAnB,EAA6BH,QAA7B;AACH,aAFD;;AAIAzG,2BAAeV,IAAf,EAAqBC,IAArB,EAA2BD,KAAKO,gBAAhC,EAAkD,KAAlD;AACH;AA9CS,KAAd;AAgDA,QAAMpC,SAAS8B,KAAKsH,OAAL,CAAaV,GAAb,CAAiB,UAACxB,UAAD,EAAahG,KAAb,EAAuB;AACnD,YAAMmI,qBAAqB,SACvB,EADuB,EAEvBnC,UAFuB,EAGvB;AACIoC,sBAAUpI,UAAUW,KAAKO,gBAD7B;AAEImH,0BAAezH,KAAKyH,YAAL,KAAsB,KAAvB,GAAgC,IAAhC,GAAuC;AAFzD,SAHuB,EAOvBzH,KAAK0H,QAAL,IAAiB,EAPM,CAA3B;AASA,eAAOvC,UAAUpF,IAAV,EAAgBC,IAAhB,EAAsBZ,KAAtB,EAA6BmI,kBAA7B,CAAP;AACH,KAXc,EAWZI,MAXY,CAWL;AACN;AACA3H,SAAKvB,UAAL,GAAkB,uBAAE,KAAF,EAAS,EAACwC,OAAOrD,YAAYK,kBAApB,EAAT,CAAlB,GAAsE,IAFhE,CAXK,CAAf;;AAgBA,QAAIF,yBAAJ;AAAA,QAAsBC,0BAAtB;AACA,QAAIgC,KAAKvB,UAAT,EAAqB;AACjBV,2BAAmB4C,mBAAmBZ,IAAnB,EAAyBd,aAAzB,EAAwCe,IAAxC,CAAnB;AACAhC,4BAAoB2C,mBAAmBZ,IAAnB,EAAyBb,cAAzB,EAAyCc,IAAzC,CAApB;AACH;;AAED,QAAM4H,eAAe5H,KAAK6H,aAAL,GAAqB,IAArB,GAA4B,uBAAE,KAAF,EAAS;AACtD5G,eAAOrD,YAAYY,SADmC;AAEtD8C,gBAAQ,gBAACC,EAAD,EAAKkE,MAAL,EAAgB;AACpB,gBAAIA,MAAJ,EAAY;AACR;AACH;AACD1F,iBAAK4E,cAAL,GAAsBpD,EAAtB;AACH;AAPqD,KAAT,CAAjD;;AAUA,QAAM+D,UAAU,CACZtF,KAAKvB,UAAL,GAAkBV,gBAAlB,GAAqC,IADzB,EAEZ,uBAAE,KAAF,EAAS;AACLkD,eAAO,CACHrD,YAAYM,MADT,EAEF8B,KAAKiG,QAAL,GAAgBrI,YAAYO,cAA5B,GAA6C,IAF3C,EAGF6B,KAAKvB,UAAL,GAAkBb,YAAYQ,YAA9B,GAA6C,IAH3C,EAIL8C,IAJK,CAIA,GAJA,CADF;AAMLI,gBAAQ,gBAACC,EAAD,EAAKkE,MAAL,EAAgB;AACpB,gBAAIA,MAAJ,EAAY;AACR;AACH;AACD1F,iBAAK8C,UAAL,GAAkBtB,EAAlB;AACH,SAXI;AAYLuG,kBAAU,oBAAM;AACZ5D,gCAAoBnE,IAApB;AACH;AAdI,KAAT,EAeG,CACC7B,MADD,EAEC0J,YAFD,CAfH,CAFY,EAqBZ5H,KAAKvB,UAAL,GAAkBT,iBAAlB,GAAsC,IArB1B,CAAhB;AAuBA,WAAO,uBAAE+H,GAAF,EAAOM,KAAP,EAAc,CAACrG,KAAK+H,MAAN,EAAczC,OAAd,EAAuBtF,KAAKgI,KAA5B,CAAd,CAAP;AACH,CAlHD;;AAoHA,IAAMC,YAAY;AACdC,gBAAY,sBAAM;AACd,eAAO;AACHxF,oBAAQ,IADL;AAEHG,wBAAY,IAFT;AAGHxD,kBAAM,EAHH,EAGO;AACVsF,4BAAgB,IAJb;AAKHrE,8BAAkB,CALf;AAMH8F,qCAAyBD,SANtB;AAOHnB,2BAAe,KAPZ;AAQHX,gCAAoB;AAChB5E,sBAAM,KADU;AAEhBG,uBAAO;AAFS;AARjB,SAAP;AAaH,KAfa;AAgBduI,UAAM,cAACpI,IAAD,EAAqB;AAAA,YAAdC,IAAc,uEAAP,EAAO;;AACvB,eAAO8F,WAAW/F,IAAX,EAAiBC,IAAjB,CAAP;AACH;AAlBa,CAAlB;;kBAqBeiI,S","file":"tabs.js","sourcesContent":["import '../common/object.assign';\nimport p from '../polythene/polythene';\nimport events from '../common/events';\nimport m from 'mithril';\nimport button from '../button/button';\nimport icon from '../icon/icon';\nimport iconBtn from '../icon-button/icon-button';\nimport scrollTo from '../common/scroll-to';\nimport theme from './theme'; // contains icons\nimport config from './theme/config';\n\nconst CSS_CLASSES = {\n    block: 'pe-tabs',\n    scrollButton: 'pe-tabs__scroll-button',\n    scrollButtonLeft: 'pe-tabs__scroll-button--start',\n    scrollButtonRight: 'pe-tabs__scroll-button--end',\n    scrollButtonOffset: 'pe-tabs__scroll-button--offset',\n    tabRow: 'pe-tabs__row',\n    tabRowCentered: 'pe-tabs__row--centered',\n    tabRowIndent: 'pe-tabs__row--indent',\n    tab: 'pe-tabs__tab',\n    tabContent: 'pe-tabs__tab-content',\n    tabHasIcon: 'pe-tabs__tab---icon',\n    indicator: 'pe-tabs__indicator',\n    scrollable: 'pe-tabs--scrollable',\n    isAutofit: 'pe-tabs--autofit',\n    isAtStart: 'pe-tabs--start',\n    isAtEnd: 'pe-tabs--end',\n    isMenu: 'pe-tabs--menu',\n    isSmall: 'pe-tabs--small',\n    activeSelected: 'pe-tabs__active-selected',\n    // reference:\n    label: 'pe-button__label',\n};\n\nconst POSITION_LEFT = (1 << 1);\nconst POSITION_RIGHT = (1 << 2);\n\nconst getNewIndex = (index, tabs) => {\n    const minTabIndex = 0;\n    const maxTabIndex = tabs.length - 1;\n    return {\n        left: Math.max(index - 1, minTabIndex),\n        right: Math.min(index + 1, maxTabIndex)\n    };\n};\n\nconst handleScrollButtonClick = (ctrl, opts, e, direction) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const tabs = ctrl.tabs;\n    const currentTabIndex = ctrl.selectedTabIndex;\n    const newIndex = getNewIndex(currentTabIndex, tabs)[direction];\n    scrollToTab(ctrl, newIndex);\n    if (newIndex !== currentTabIndex) {\n        setSelectedTab(ctrl, opts, newIndex, true);\n        m.redraw();\n    }\n};\n\n\nconst createScrollButton = (ctrl, position, opts) => {\n    const scrollIconForward = opts.scrollIconForward || theme.arrowForward;\n    const scrollIconBackward = opts.scrollIconBackward || theme.arrowBackward;\n\n    return m(iconBtn, {\n        class: [\n            CSS_CLASSES.scrollButton,\n            (position === POSITION_LEFT ? CSS_CLASSES.scrollButtonLeft : CSS_CLASSES.scrollButtonRight)\n        ].join(' '),\n        icon: position === POSITION_LEFT ? scrollIconBackward : scrollIconForward,\n        ripple: {\n            center: true\n        },\n        config: (el) => {\n            if (ctrl.scrollButtonLeftEl && ctrl.scrollButtonRightEl) {\n                return;\n            }\n            if (position === POSITION_LEFT) {\n                ctrl.scrollButtonLeftEl = el;\n            } else {\n                ctrl.scrollButtonRightEl = el;\n            }\n        },\n        events: {\n            onclick: (position === POSITION_LEFT) ? (e) => {\n                handleScrollButtonClick(ctrl, opts, e, 'left');\n            } : (e) => {\n                handleScrollButtonClick(ctrl, opts, e, 'right');\n            }\n        }\n    });\n};\n\nconst alignToTitle = (ctrl) => {\n    const firstTab = ctrl.tabs[0].el;\n    const firstInnerLabel = firstTab.querySelector('.' + CSS_CLASSES.label + ' span');\n    const firstOuterLabelWidth = firstTab.getBoundingClientRect().width;\n    const firstInnerLabelWidth = firstInnerLabel.getBoundingClientRect().width;\n    const firstTabOffset = (firstOuterLabelWidth - firstInnerLabelWidth) / 2;\n    firstTab.style.marginLeft = -firstTabOffset + 'px';\n};\n\nconst createRightButtonOffset = (ctrl) => {\n    // add padding to right so that last item is not hidden behind scroll button\n    const scrollButtonRightWidth = ctrl.scrollButtonRightEl.getBoundingClientRect().width;\n    const scrollButtonOffsetEl = ctrl.tabsEl.querySelector('.' + CSS_CLASSES.scrollButtonOffset);\n    scrollButtonOffsetEl.style.width = scrollButtonRightWidth + 'px';\n};\n\nconst scrollToTab = (ctrl, tabIndex) => {\n    const tabs = ctrl.tabs;\n    const scroller = ctrl.scrollerEl;\n    // scroll to position of selected tab\n    const tabLeft = tabs.slice(0, tabIndex).reduce((totalWidth, tabData) => {\n        return totalWidth + tabData.el.getBoundingClientRect().width;\n    }, 0);\n    // tabs at the far right will not fully move to the left\n    // because the scrollable row will stick to the right \n    // to get the max scroll left, we subtract the visible viewport from the scroll width\n    const scrollerWidth = scroller.getBoundingClientRect().width; // frame width\n    const scrollingWidth = scroller.scrollWidth;\n    const maxScroll = scrollingWidth - scrollerWidth;\n    const left = Math.min(tabLeft, maxScroll);\n    const currentLeft = scroller.scrollLeft;\n    if (currentLeft !== left) {\n        const duration = Math.abs(currentLeft - left) / config.tabs_scroll_speed;\n        const delaySeconds = config.tabs_scroll_delay || 0;\n        setTimeout(() => {\n            scrollTo({\n                element: scroller,\n                to: left,\n                duration: Math.max(config.tabs_scroll_min_duration, duration),\n                direction: 'horizontal'\n            });\n        }, delaySeconds * 1000);\n    }\n};\n\nconst updateScrollButtons = (ctrl) => {\n    const scrollerEl = ctrl.scrollerEl;\n    const scrollLeft = scrollerEl.scrollLeft;\n    const currentTabIndex = ctrl.selectedTabIndex;\n    const tabs = ctrl.tabs;\n    const tabsEl = ctrl.tabsEl;\n    const minTabIndex = 0;\n    const maxTabIndex = tabs.length - 1;\n    const isAtLeft = (scrollerEl.scrollLeft === 0) && (currentTabIndex === minTabIndex);\n    const isAtRight = (scrollLeft >= (scrollerEl.scrollWidth - tabsEl.getBoundingClientRect().width - 1)) && (currentTabIndex === maxTabIndex);\n    ctrl.scrollButtonStates.left = !isAtLeft;\n    ctrl.scrollButtonStates.right = !isAtRight;\n};\n\nconst animateIndicator = (selectedTabEl, animate, ctrl) => {\n    const parentRect = ctrl.tabsEl.getBoundingClientRect();\n    const rect = selectedTabEl.getBoundingClientRect();\n    const style = ctrl.tabIndicatorEl.style;\n    const translateX = rect.left - parentRect.left + ctrl.scrollerEl.scrollLeft;\n    const transformCmd = 'translate(' + translateX + 'px, 0)';\n    const duration = animate ? config.indicator_slide_min_duration : 0;\n    // use width instead of scale to please IE10\n    style.width = rect.width + 'px';\n    style['transition-duration'] =\n        style['-webkit-transition-duration'] =\n        style['-moz-transition-duration'] =\n        style['-o-transition-duration'] = duration + 's';\n    style.transform =\n        style['-webkit-transform'] =\n        style['-moz-transform'] =\n        style['-ms-transform'] =\n        style['-o-transform'] = transformCmd;\n};\n\nconst setSelectedTab = (ctrl, opts, index, animate) => {\n    ctrl.selectedTabIndex = index;\n    if (!ctrl.tabs.length) return;\n    const selectedTabEl = ctrl.tabs[index].el;\n    if (selectedTabEl && ctrl.tabIndicatorEl && ctrl.tabsEl) {\n        animateIndicator(selectedTabEl, animate, ctrl);\n    }\n    if (ctrl.managesScroll) {\n        updateScrollButtons(ctrl);\n        scrollToTab(ctrl, index);\n    }\n    if (opts.getState) {\n        opts.getState({\n            index: index,\n            data: ctrl.tabs[index].data,\n            el: selectedTabEl\n        });\n    }\n};\n\nconst createTab = (ctrl, opts, index, buttonOpts) => {\n    // Let internal onclick function co-exist with passed button option\n    buttonOpts.events = buttonOpts.events || {};\n    buttonOpts.events.onclick = buttonOpts.events.onclick || (() => {});\n    const tabButtonOptions = Object.assign(\n        {},\n        buttonOpts,\n        {\n            content: m('div', {\n                class: CSS_CLASSES.tabContent\n            }, [\n                buttonOpts.icon ? m(icon, buttonOpts.icon) : null,\n                buttonOpts.label ? m('div', {class: CSS_CLASSES.label}, m('span', buttonOpts.label)) : null,\n            ]),\n            class: [\n                CSS_CLASSES.tab,\n                (buttonOpts.icon && buttonOpts.label ? CSS_CLASSES.tabHasIcon : null),\n                buttonOpts.class\n            ].join(' '),\n            wash: false,\n            ripple: true,\n            events: Object.assign(\n                {},\n                buttonOpts.events,\n                {\n                    onclick: (e) => {\n                        setSelectedTab(ctrl, opts, index, opts.noIndicatorSlide ? false : true);\n                        buttonOpts.events.onclick(e);\n                    }\n                }\n            ),\n            config: (el, inited) => {\n                if (inited) {\n                    return;\n                }\n                ctrl.tabs.push({data: buttonOpts, el});\n            }\n        }\n    );\n    return m(button, tabButtonOptions);\n};\n\nconst sortNumbers = (a, b) => {\n    if (a < b)\n        return -1;\n    if (a > b)\n        return 1;\n    else\n        return 0;\n};\n\nconst createView = (ctrl, opts = {}) => {\n    const tag = opts.tag || 'div';\n    const autofit = (opts.scrollable || opts.centered) ? false : (opts.autofit ? true : false);\n\n    // keep selected tab up to date\n    if (opts.selectedTab !== undefined && ctrl.previousOptsSelectedTab !== opts.selectedTab) {\n        setSelectedTab(ctrl, opts, opts.selectedTab, true);\n    }\n    ctrl.previousOptsSelectedTab = opts.selectedTab;\n\n    const props = {\n        class: [\n            CSS_CLASSES.block,\n            (opts.scrollable ? CSS_CLASSES.scrollable : null),\n            ((ctrl.selectedTabIndex === 0) ? CSS_CLASSES.isAtStart : null),\n            ((ctrl.selectedTabIndex === ctrl.tabs.length - 1) ? CSS_CLASSES.isAtEnd : null),\n            (opts.activeSelected ? CSS_CLASSES.activeSelected : null),\n            (autofit ? CSS_CLASSES.isAutofit : null),\n            (opts.menu ? CSS_CLASSES.isMenu : null),\n            (opts.small ? CSS_CLASSES.isSmall : null),\n            opts.class\n        ].join(' '),\n        id: opts.id || '',\n        config: (el, inited, context) => {\n            if (inited) {\n                return;\n            }\n            ctrl.tabsEl = el;\n\n            if (opts.largestWidth) {\n                const widths = ctrl.tabs.map(tabData => tabData.el.getBoundingClientRect().width);\n                const largest = widths.sort(sortNumbers).reverse()[0];\n                ctrl.tabs.forEach(tabData => tabData.el.style.width = largest + 'px');\n            }\n\n            // align first scrollable tab to title\n            if (opts.scrollable) {\n                alignToTitle(ctrl);\n            }\n            // handle scroll\n            if (opts.scrollable && !p.isTouch) {\n                ctrl.managesScroll = true;\n                createRightButtonOffset(ctrl);\n            }\n\n            const onResize = () => {\n                setSelectedTab(ctrl, opts, ctrl.selectedTabIndex, false);\n                m.redraw();\n            };\n            events.subscribe('resize', onResize);\n\n            context.onunload = () => {\n                events.unsubscribe('resize', onResize);\n            };\n\n            setSelectedTab(ctrl, opts, ctrl.selectedTabIndex, false);\n        }\n    };\n    const tabRow = opts.buttons.map((buttonOpts, index) => {\n        const buttonOptsCombined = Object.assign(\n            {},\n            buttonOpts,\n            {\n                selected: index === ctrl.selectedTabIndex,\n                animateOnTap: (opts.animateOnTap !== false) ? true : false\n            },\n            opts.tabsOpts || {}\n        );\n        return createTab(ctrl, opts, index, buttonOptsCombined);\n    }).concat([\n        // offset for right scroll button\n        opts.scrollable ? m('div', {class: CSS_CLASSES.scrollButtonOffset}) : null\n    ]);\n\n    let scrollButtonLeft, scrollButtonRight;\n    if (opts.scrollable) {\n        scrollButtonLeft = createScrollButton(ctrl, POSITION_LEFT, opts);\n        scrollButtonRight = createScrollButton(ctrl, POSITION_RIGHT, opts);\n    }\n\n    const tabIndicator = opts.hideIndicator ? null : m('div', {\n        class: CSS_CLASSES.indicator,\n        config: (el, inited) => {\n            if (inited) {\n                return;\n            }\n            ctrl.tabIndicatorEl = el;\n        }\n    });\n\n    const content = [\n        opts.scrollable ? scrollButtonLeft : null,\n        m('div', {\n            class: [\n                CSS_CLASSES.tabRow,\n                (opts.centered ? CSS_CLASSES.tabRowCentered : null),\n                (opts.scrollable ? CSS_CLASSES.tabRowIndent : null)\n            ].join(' '),\n            config: (el, inited) => {\n                if (inited) {\n                    return;\n                }\n                ctrl.scrollerEl = el;\n            },\n            onscroll: () => {\n                updateScrollButtons(ctrl);\n            }\n        }, [\n            tabRow,\n            tabIndicator\n        ]),\n        opts.scrollable ? scrollButtonRight : null\n    ];\n    return m(tag, props, [opts.before, content, opts.after]);\n};\n\nconst component = {\n    controller: () => {\n        return {\n            tabsEl: null,\n            scrollerEl: null,\n            tabs: [], // {data, el}\n            tabIndicatorEl: null,\n            selectedTabIndex: 0,\n            previousOptsSelectedTab: undefined,\n            managesScroll: false,\n            scrollButtonStates: {\n                left: false,\n                right: false\n            }\n        };\n    },\n    view: (ctrl, opts = {}) => {\n        return createView(ctrl, opts);\n    }\n};\n\nexport default component;\n"]}