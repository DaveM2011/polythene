{"version":3,"sources":["../../../src/src/menu/theme/layout.js"],"names":["unifySize","config","size","min_size","widthClass","sizeStr","toString","replace","widthStyle","s","width","size_factor","createStyles","vendorize","prefixes_transition","sizes","map","z_menu","opacity","position","grid_unit_menu","border_radius","unit_screen_size_large","max_size_small_screen"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAMA,YAAY,SAAZA,SAAY,CAACC,MAAD,EAASC,IAAT,EAAkB;AAChC,WAAQA,OAAOD,OAAOE,QAAf,GAA2BF,OAAOE,QAAlC,GAA6CD,IAApD;AACH,CAFD;;AAIA,IAAME,aAAa,SAAbA,UAAa,CAACH,MAAD,EAASC,IAAT,EAAkB;AACjC,QAAMG,UAAUH,KAAKI,QAAL,GAAgBC,OAAhB,CAAwB,GAAxB,EAA6B,GAA7B,CAAhB;AACA,WAAO,oBAAoBF,OAA3B;AACH,CAHD;;AAKA,IAAMG,aAAa,SAAbA,UAAa,CAACP,MAAD,EAASC,IAAT,EAAkB;AACjC,QAAMO,IAAIT,UAAUC,MAAV,EAAkBC,IAAlB,CAAV;AACA,+BACK,OAAOE,WAAWH,MAAX,EAAmBQ,CAAnB,CADZ,EACoC;AAC5BC,eAAOT,OAAOU,WAAP,GAAqBF,CAArB,GAAyB,IADJ;AAE5B,qBAAa;AAFe,KADpC;AAMH,CARD;;AAUA,IAAMG,eAAe,SAAfA,YAAe,CAACX,MAAD,EAAY;AAC7B,WAAO,CAAC;AACJ,oBAAY;AACR;AACA,wBAAMY,SAAN,CAAgB;AACZ,0CAA8B;AADlB,SAAhB,EAEG,iBAAOC,mBAFV,CAFQ,EAKR,gBAAMD,SAAN,CAAgB;AACZ,mCAAuB;AADX,SAAhB,EAEG,iBAAOC,mBAFV,CALQ,EAQRb,OAAOc,KAAP,CAAaC,GAAb,CAAiB,UAACd,IAAD,EAAU;AACvB,mBAAOM,WAAWP,MAAX,EAAmBC,IAAnB,CAAP;AACH,SAFD,CARQ;AAYJ,uBAAW,iBAAOe,MAZd;AAaJC,qBAAS,CAbL;AAcJC,sBAAU,UAdN;AAeJT,mBAAO,MAfH;AAgBJ,yBAAa,iBAAOU,cAAP,GAAwBnB,OAAOE,QAA/B,GAA0C,IAhBnD;;AAkBJ,qCAAyB;AACrBO,uBAAO;AADc,aAlBrB;;AAsBJ,kCAAsB;AAClBQ,yBAAS;AADS,aAtBlB;;AA0BJ,oCAAwB;AACpBC,0BAAU,UADU;AAEpBD,yBAAS;AAFW,aA1BpB;;AA+BJ,kCAAsB;AAClBR,uBAAO,MADW;AAElB,iCAAiBT,OAAOoB,aAAP,GAAuB;AAFtB;;AA/BlB,WAoCH,wBAAwB,iBAAOC,sBAA/B,GAAwD,KApCrD,EAoC6D;AAC7D,yBAAarB,OAAOsB,qBAAP,GAA+B,iBAAOH,cAAtC,GAAuD;AADP,SApC7D;;AADR,KAAD,CAAP;AA4CH,CA7CD;;kBA+Ce,UAACnB,MAAD;AAAA,WAAa,gBAAMW,YAAN,CAAmBX,MAAnB,EAA2BW,YAA3B,CAAb;AAAA,C","file":"layout.js","sourcesContent":["import common from 'polythene/config/config';\nimport mixin from '../../common/mixin';\n\nconst unifySize = (config, size) => {\n    return (size < config.min_size) ? config.min_size : size;\n};\n\nconst widthClass = (config, size) => {\n    const sizeStr = size.toString().replace('.', '-');\n    return 'pe-menu--width-' + sizeStr;\n};\n\nconst widthStyle = (config, size) => {\n    const s = unifySize(config, size);\n    return {\n        ['&.' + widthClass(config, s)]: {\n            width: config.size_factor * s + 'px',\n            'max-width': '100%'\n        }\n    };\n};\n\nconst createStyles = (config) => {\n    return [{\n        '.pe-menu': [\n            // transition-duration set in js\n            mixin.vendorize({\n                'transition-timing-function': 'ease-out'\n            }, common.prefixes_transition),\n            mixin.vendorize({\n                'transition-property': 'opacity'\n            }, common.prefixes_transition),\n            config.sizes.map((size) => {\n                return widthStyle(config, size);\n            }),\n            {\n                'z-index': common.z_menu,\n                opacity: 0,\n                position: 'absolute',\n                width: '100%',\n                'min-width': common.grid_unit_menu * config.min_size + 'px',\n\n                '&.pe-menu--width-auto': {\n                    width: 'auto'\n                },\n\n                '&.pe-menu--visible': {\n                    opacity: 1\n                },\n\n                '&.pe-menu--permanent': {\n                    position: 'relative',\n                    opacity: 1\n                },\n\n                ' .pe-menu__content': {\n                    width: '100%',\n                    'border-radius': config.border_radius + 'px'\n                },\n\n                ['@media (max-width: ' + common.unit_screen_size_large + 'px)']: {\n                    'max-width': config.max_size_small_screen * common.grid_unit_menu + 'px'\n                }\n            }\n        ]\n\n    }];\n};\n\nexport default (config) => (mixin.createStyles(config, createStyles));\n"]}