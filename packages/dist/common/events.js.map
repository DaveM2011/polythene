{"version":3,"sources":["../../src/src/common/events.js"],"names":["listeners","throttle","func","s","context","window","wait","args","later","apply","setTimeout","subscribe","eventName","listener","delay","push","unsubscribe","index","indexOf","splice","emit","event","forEach","addEventListener","e"],"mappings":";;;;;AAAA,IAAMA,YAAY,EAAlB;;AAEA;AACA,IAAMC,WAAW,SAAXA,QAAW,CAACC,IAAD,EAAsC;AAAA,QAA/BC,CAA+B,uEAA3B,IAA2B;AAAA,QAArBC,OAAqB,uEAAXC,MAAW;;AACnD,QAAIC,OAAO,KAAX;AACA,WAAO,YAAa;AAAA,0CAATC,IAAS;AAATA,gBAAS;AAAA;;AAChB,YAAMC,QAAQ,SAARA,KAAQ,GAAM;AAChBN,iBAAKO,KAAL,CAAWL,OAAX,EAAoBG,IAApB;AACH,SAFD;AAGA,YAAI,CAACD,IAAL,EAAW;AACPE;AACAF,mBAAO,IAAP;AACAI,uBAAW,YAAM;AACbJ,uBAAO,KAAP;AACH,aAFD,EAEGH,CAFH;AAGH;AACJ,KAXD;AAYH,CAdD;;AAgBA,IAAMQ,YAAY,SAAZA,SAAY,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,KAAtB,EAAgC;AAC9Cd,cAAUY,SAAV,IAAuBZ,UAAUY,SAAV,KAAwB,EAA/C;AACAZ,cAAUY,SAAV,EAAqBG,IAArB,CAA0BD,QAAQb,SAASY,QAAT,EAAmBC,KAAnB,CAAR,GAAoCD,QAA9D;AACH,CAHD;;AAMA,IAAMG,cAAc,SAAdA,WAAc,CAACJ,SAAD,EAAYC,QAAZ,EAAyB;AACzC,QAAI,CAACb,UAAUY,SAAV,CAAL,EAA2B;AACvB;AACH;AACD,QAAMK,QAAQjB,UAAUY,SAAV,EAAqBM,OAArB,CAA6BL,QAA7B,CAAd;AACA,QAAII,QAAQ,CAAC,CAAb,EAAgB;AACZjB,kBAAUY,SAAV,EAAqBO,MAArB,CAA4BF,KAA5B,EAAmC,CAAnC;AACH;AACJ,CARD;;AAWA,IAAMG,OAAO,SAAPA,IAAO,CAACR,SAAD,EAAYS,KAAZ,EAAsB;AAC/B,QAAI,CAACrB,UAAUY,SAAV,CAAL,EAA2B;AACvB;AACH;AACDZ,cAAUY,SAAV,EAAqBU,OAArB,CAA6B,UAACT,QAAD,EAAc;AACvCA,iBAASQ,KAAT;AACH,KAFD;AAGH,CAPD;;AAUAhB,OAAOkB,gBAAP,CAAwB,QAAxB,EAAkC;AAAA,WAAMH,KAAK,QAAL,EAAeI,CAAf,CAAN;AAAA,CAAlC;AACAnB,OAAOkB,gBAAP,CAAwB,QAAxB,EAAkC;AAAA,WAAMH,KAAK,QAAL,EAAeI,CAAf,CAAN;AAAA,CAAlC;AACAnB,OAAOkB,gBAAP,CAAwB,SAAxB,EAAmC;AAAA,WAAMH,KAAK,SAAL,EAAgBI,CAAhB,CAAN;AAAA,CAAnC;;kBAEe;AACXvB,sBADW;AAEXU,wBAFW;AAGXK,4BAHW;AAIXI;AAJW,C","file":"events.js","sourcesContent":["const listeners = {};\n\n// https://gist.github.com/Eartz/fe651f2fadcc11444549\nconst throttle = (func, s = 0.05, context = window) => {\n    let wait = false;\n    return (...args) => {\n        const later = () => {\n            func.apply(context, args);\n        };\n        if (!wait) {\n            later();\n            wait = true;\n            setTimeout(() => {\n                wait = false;\n            }, s);\n        }\n    };\n};\n\nconst subscribe = (eventName, listener, delay) => {\n    listeners[eventName] = listeners[eventName] || [];\n    listeners[eventName].push(delay ? throttle(listener, delay) : listener);\n};\n\n\nconst unsubscribe = (eventName, listener) => {\n    if (!listeners[eventName]) {\n        return;\n    }\n    const index = listeners[eventName].indexOf(listener);\n    if (index > -1) {\n        listeners[eventName].splice(index, 1);\n    }\n};\n\n\nconst emit = (eventName, event) => {\n    if (!listeners[eventName]) {\n        return;\n    }\n    listeners[eventName].forEach((listener) => {\n        listener(event);\n    });\n};\n\n\nwindow.addEventListener('resize', e => (emit('resize', e)));\nwindow.addEventListener('scroll', e => (emit('scroll', e)));\nwindow.addEventListener('keydown', e => (emit('keydown', e)));\n\nexport default {\n    throttle,\n    subscribe,\n    unsubscribe,\n    emit\n};"]}