{"version":3,"sources":["../../src/src/common/styler.js"],"names":["remove","id","old","document","getElementById","parentNode","removeChild","add","styles","addToDocument","opts","documentRef","window","styleEl","createElement","setAttribute","forEach","styleList","Object","keys","length","style","scoped","sheet","appendChild","createTextNode","head"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,SAAS,SAATA,MAAS,CAACC,EAAD,EAAQ;AACnB,QAAIA,EAAJ,EAAQ;AACJ,YAAMC,MAAMC,SAASC,cAAT,CAAwBH,EAAxB,CAAZ;AACA,YAAIC,GAAJ,EAAS;AACLA,gBAAIG,UAAJ,CAAeC,WAAf,CAA2BJ,GAA3B;AACH;AACJ;AACJ,CAPD;;AASA;;;;AAIA,IAAMK,MAAM,SAANA,GAAM,CAACN,EAAD,EAAmB;AAAA,sCAAXO,MAAW;AAAXA,cAAW;AAAA;;AAC3BC,oCAAc,EAACR,MAAD,EAAd,SAAuBO,MAAvB;AACH,CAFD;;AAIA;;;;;;AAMA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAqB;AAAA,uCAAXF,MAAW;AAAXA,cAAW;AAAA;;AACvC,QAAMP,KAAKS,KAAKT,EAAhB;AACA,QAAMU,cAAcD,KAAKP,QAAL,IAAiBS,OAAOT,QAA5C;AACAH,WAAOC,EAAP;AACA,QAAMY,UAAUF,YAAYG,aAAZ,CAA0B,OAA1B,CAAhB;AACA,QAAIb,EAAJ,EAAQ;AACJY,gBAAQE,YAAR,CAAqB,IAArB,EAA2Bd,EAA3B;AACH;AACDO,WAAOQ,OAAP,CAAe,UAACC,SAAD,EAAe;AAC1B;AACA,YAAIC,OAAOC,IAAP,CAAYF,SAAZ,EAAuBG,MAA3B,EAAmC;AAC/BH,sBAAUD,OAAV,CAAkB,UAACK,KAAD,EAAW;AACzB,oBAAMC,SAAS,EAAC,WAAWD,KAAZ,EAAf;AACA,oBAAME,QAAQ,cAAIA,KAAJ,CAAUD,MAAV,CAAd;AACAT,wBAAQW,WAAR,CAAoBb,YAAYc,cAAZ,CAA2BF,KAA3B,CAApB;AACH,aAJD;AAKH;AACJ,KATD;AAUAZ,gBAAYe,IAAZ,CAAiBF,WAAjB,CAA6BX,OAA7B;AACH,CAnBD;;kBAqBe;AACXN,YADW;AAEXE,gCAFW;AAGXT;AAHW,C","file":"styler.js","sourcesContent":["import j2c from 'j2c';\n\nconst remove = (id) => {\n    if (id) {\n        const old = document.getElementById(id);\n        if (old) {\n            old.parentNode.removeChild(old);\n        }\n    }\n};\n\n/*\n* id: identifier, used as HTMLElement id for the attached <style></style> element\n* styles: list of lists style Objects\n*/\nconst add = (id, ...styles) => {\n    addToDocument({id}, ...styles);\n};\n\n/*\n* opts: options object\n  * id: identifier, used as HTMLElement id for the attached <style></style> element\n  * document: document reference; default window.document\n* styles: list of lists style Objects\n*/\nconst addToDocument = (opts, ...styles) => {\n    const id = opts.id;\n    const documentRef = opts.document || window.document;\n    remove(id);\n    const styleEl = documentRef.createElement('style');\n    if (id) {\n        styleEl.setAttribute('id', id);\n    }\n    styles.forEach((styleList) => {\n        // each style returns a list\n        if (Object.keys(styleList).length) {\n            styleList.forEach((style) => {\n                const scoped = {'@global': style};\n                const sheet = j2c.sheet(scoped);\n                styleEl.appendChild(documentRef.createTextNode(sheet));\n            });\n        }\n    });\n    documentRef.head.appendChild(styleEl);\n};\n\nexport default {\n    add,\n    addToDocument,\n    remove\n};\n"]}