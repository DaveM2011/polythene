{"version":3,"sources":["../../src/src/common/scroll-to.js"],"names":["scrollTo","opts","element","which","direction","to","duration","start","change","animationStart","Date","getTime","animating","Promise","resolve","animateScroll","requestAnimFrame","now","percentage","val","easeInOutCubic","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","setTimeout","callback"],"mappings":";;;;;;AAMA;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAMA,WAAW,SAAXA,QAAW,CAACC,IAAD,EAAU;AACvB,QAAMC,UAAUD,KAAKC,OAArB;AACA,QAAMC,QAASF,KAAKG,SAAL,KAAmB,YAApB,GAAoC,YAApC,GAAmD,WAAjE;AACA,QAAMC,KAAKJ,KAAKI,EAAhB;AACA,QAAMC,WAAWL,KAAKK,QAAL,GAAgB,IAAjC;AACA,QAAMC,QAAQL,QAAQC,KAAR,CAAd;AACA,QAAMK,SAASH,KAAKE,KAApB;AACA,QAAME,iBAAiB,IAAIC,IAAJ,GAAWC,OAAX,EAAvB;AACA,QAAIC,YAAY,IAAhB;AACA,WAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkB;AACjC,YAAMC,gBAAgB,SAAhBA,aAAgB,GAAW;AAC7B,gBAAI,CAACH,SAAL,EAAgB;AACZ;AACH;AACDI,6BAAiBD,aAAjB;AACA,gBAAME,MAAM,IAAIP,IAAJ,GAAWC,OAAX,EAAZ;AACA,gBAAMO,aAAc,CAACD,MAAMR,cAAP,IAAyBH,QAA7C;AACA,gBAAMa,MAAMZ,QAAQC,SAAS,iBAAOY,cAAP,CAAsBF,UAAtB,CAA7B;AACAhB,oBAAQC,KAAR,IAAiBgB,GAAjB;AACA,gBAAID,cAAc,CAAlB,EAAqB;AACjBhB,wBAAQC,KAAR,IAAiBE,EAAjB;AACAO,4BAAY,KAAZ;AACAE;AACH;AACJ,SAdD;AAeAE,yBAAiBD,aAAjB;AACH,KAjBM,CAAP;AAkBH,CA3BD,C,CA5BA;;;;;;AAyDA,IAAMC,mBAAoB,YAAM;AAC5B,WAAOK,OAAOC,qBAAP,IAAgCD,OAAOE,2BAAvC,IAAsEF,OAAOG,wBAA7E,IAA0G,oBAAY;AACzHH,eAAOI,UAAP,CAAkBC,QAAlB,EAA4B,OAAO,EAAnC;AACH,KAFD;AAGH,CAJwB,EAAzB;;kBAMe1B,Q","file":"scroll-to.js","sourcesContent":["/*\nAnimated scroll to a position.\nDerived from https://github.com/madebysource/animated-scrollto\nAdapted to Mithril and rewritten to es6.\n*/\n\nimport easing from './easing';\n\n/*\nopts:\n    element: HTML Element\n    to: position\n    duration: seconds\n    direction: 'vertical' or 'horizontal'\n\n\nFunction returns a Promise:\n\n    scrollTo({\n        element: scroller,\n        to: left,\n        duration: .5,\n        direction: 'horizontal'\n    }).then(() => {\n        console.log('scroll done')\n    });\n\n*/\nconst scrollTo = (opts) => {\n    const element = opts.element;\n    const which = (opts.direction === 'horizontal') ? 'scrollLeft' : 'scrollTop';\n    const to = opts.to;\n    const duration = opts.duration * 1000;\n    const start = element[which];\n    const change = to - start;\n    const animationStart = new Date().getTime();\n    let animating = true;\n    return new Promise(function(resolve) {\n        const animateScroll = function() {\n            if (!animating) {\n                return;\n            }\n            requestAnimFrame(animateScroll);\n            const now = new Date().getTime();\n            const percentage = ((now - animationStart) / duration);\n            const val = start + change * easing.easeInOutCubic(percentage);\n            element[which] = val;\n            if (percentage >= 1) {\n                element[which] = to;\n                animating = false;\n                resolve();\n            }\n        };\n        requestAnimFrame(animateScroll);\n    });\n};\n\nconst requestAnimFrame = (() => {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || (callback => {\n        window.setTimeout(callback, 1000 / 60);\n    });\n})();\n\nexport default scrollTo;\n"]}