{"version":3,"sources":["../../src/src/common/easing.js"],"names":["linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint"],"mappings":";;;;;;AACA;;;;;;kBAMe;AACX;AACAA,YAAQ,gBAACC,CAAD;AAAA,eAAQA,CAAR;AAAA,KAFG;AAGX;AACAC,gBAAY,oBAACD,CAAD;AAAA,eAAQA,IAAIA,CAAZ;AAAA,KAJD;AAKX;AACAE,iBAAa,qBAACF,CAAD;AAAA,eAAQA,KAAK,IAAIA,CAAT,CAAR;AAAA,KANF;AAOX;AACAG,mBAAe,uBAACH,CAAD;AAAA,eAAQA,IAAI,EAAJ,GAAS,IAAIA,CAAJ,GAAQA,CAAjB,GAAqB,CAAC,CAAD,GAAK,CAAC,IAAI,IAAIA,CAAT,IAAcA,CAAhD;AAAA,KARJ;AASX;AACAI,iBAAa,qBAACJ,CAAD;AAAA,eAAQA,IAAIA,CAAJ,GAAQA,CAAhB;AAAA,KAVF;AAWX;AACAK,kBAAc,sBAACL,CAAD;AAAA,eAAS,EAAEA,CAAH,GAAQA,CAAR,GAAYA,CAAZ,GAAgB,CAAxB;AAAA,KAZH;AAaX;AACAM,oBAAgB,wBAACN,CAAD;AAAA,eAAQA,IAAI,EAAJ,GAAS,IAAIA,CAAJ,GAAQA,CAAR,GAAYA,CAArB,GAAyB,CAACA,IAAI,CAAL,KAAW,IAAIA,CAAJ,GAAQ,CAAnB,KAAyB,IAAIA,CAAJ,GAAQ,CAAjC,IAAsC,CAAvE;AAAA,KAdL;AAeX;AACAO,iBAAa,qBAACP,CAAD;AAAA,eAAQA,IAAIA,CAAJ,GAAQA,CAAR,GAAYA,CAApB;AAAA,KAhBF;AAiBX;AACAQ,kBAAc,sBAACR,CAAD;AAAA,eAAQ,IAAK,EAAEA,CAAH,GAAQA,CAAR,GAAYA,CAAZ,GAAgBA,CAA5B;AAAA,KAlBH;AAmBX;AACAS,oBAAgB,wBAACT,CAAD;AAAA,eAAQA,IAAI,EAAJ,GAAS,IAAIA,CAAJ,GAAQA,CAAR,GAAYA,CAAZ,GAAgBA,CAAzB,GAA6B,IAAI,IAAI,EAAEA,CAAN,GAAWA,CAAX,GAAeA,CAAf,GAAmBA,CAA5D;AAAA,KApBL;AAqBX;AACAU,iBAAa,qBAACV,CAAD;AAAA,eAAQA,IAAIA,CAAJ,GAAQA,CAAR,GAAYA,CAAZ,GAAgBA,CAAxB;AAAA,KAtBF;AAuBX;AACAW,kBAAc,sBAACX,CAAD;AAAA,eAAQ,IAAK,EAAEA,CAAH,GAAQA,CAAR,GAAYA,CAAZ,GAAgBA,CAAhB,GAAoBA,CAAhC;AAAA,KAxBH;AAyBX;AACAY,oBAAgB,wBAACZ,CAAD;AAAA,eAAQA,IAAI,EAAJ,GAAS,KAAKA,CAAL,GAASA,CAAT,GAAaA,CAAb,GAAiBA,CAAjB,GAAqBA,CAA9B,GAAkC,IAAI,KAAM,EAAEA,CAAR,GAAaA,CAAb,GAAiBA,CAAjB,GAAqBA,CAArB,GAAyBA,CAAvE;AAAA;AA1BL,C","file":"easing.js","sourcesContent":["\n/*\nhttps://gist.github.com/gre/1650294\nEasing Functions - inspired from http://gizma.com/easing/\nOnly considering the t value for the range [0, 1] => [0, 1]\n*/\n\nexport default {\n    // no easing, no acceleration\n    linear: (t) => (t),\n    // accelerating from zero velocity\n    easeInQuad: (t) => (t * t),\n    // decelerating to zero velocity\n    easeOutQuad: (t) => (t * (2 - t)),\n    // acceleration until halfway, then deceleration\n    easeInOutQuad: (t) => (t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t),\n    // accelerating from zero velocity\n    easeInCubic: (t) => (t * t * t),\n    // decelerating to zero velocity\n    easeOutCubic: (t) => ((--t) * t * t + 1),\n    // acceleration until halfway, then deceleration\n    easeInOutCubic: (t) => (t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1),\n    // accelerating from zero velocity\n    easeInQuart: (t) => (t * t * t * t),\n    // decelerating to zero velocity\n    easeOutQuart: (t) => (1 - (--t) * t * t * t),\n    // acceleration until halfway, then deceleration\n    easeInOutQuart: (t) => (t < .5 ? 8 * t * t * t * t : 1 - 8* (--t) * t * t * t),\n    // accelerating from zero velocity\n    easeInQuint: (t) => (t * t * t * t * t),\n    // decelerating to zero velocity\n    easeOutQuint: (t) => (1 + (--t) * t * t * t * t),\n    // acceleration until halfway, then deceleration\n    easeInOutQuint: (t) => (t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t)\n};\n"]}