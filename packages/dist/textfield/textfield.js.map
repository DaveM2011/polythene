{"version":3,"sources":["../../src/src/textfield/textfield.js"],"names":["startEventType","window","PointerEvent","DocumentTouch","document","CSS_CLASSES","block","inputArea","input","label","counter","help","focusHelp","error","errorPlaceholder","stateFocused","stateDisabled","stateReadonly","stateInvalid","stateDirty","hasFloatingLabel","isDense","isRequired","hideRequiredChar","hasFullWidth","hasCounter","hideSpinner","hideClear","hideValidation","validateCustom","ctrl","opts","state","validate","value","invalid","valid","message","validateCounter","length","validateHTML","inputEl","checkValidity","getValidStatus","status","undefined","touched","isInvalid","validateResetOnClear","validateAtStart","previousInvalid","setTimeout","redraw","checkDirty","isDirty","toString","updateState","notifyState","getState","focus","dirty","el","ignoreEvent","name","ignoreEvents","indexOf","createView","tag","type","inputTag","multiline","showError","validates","min","max","minlength","required","pattern","inactive","disabled","readonly","onBlur","e","target","classList","remove","props","class","floatingLabel","dense","fullWidth","hideRequiredMark","join","id","config","inited","context","vdom","content","onclick","onfocus","add","oninput","validateOnInput","onkeydown","which","blur","addEventListener","onunload","removeEventListener","events","maxlength","autofocus","tabindex","rows","before","after","component","controller","prop","hasFocus","v","view"],"mappings":"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","file":"textfield.js","sourcesContent":["import '../common/object.assign';\nimport m from 'mithril';\nimport './theme';\n\nconst startEventType = window.PointerEvent ? 'pointerdown' : (('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) ? 'touchstart' : 'mousedown';\n\nconst CSS_CLASSES = {\n    block: 'pe-textfield',\n    inputArea: 'pe-textfield__input-area',\n    input: 'pe-textfield__input',\n    label: 'pe-textfield__label',\n    counter: 'pe-textfield__counter',\n    help: 'pe-textfield__help',\n    focusHelp: 'pe-textfield__help-focus',\n    error: 'pe-textfield__error',\n    errorPlaceholder: 'pe-textfield__error-placeholder',\n    stateFocused: 'pe-textfield--focused',\n    stateDisabled: 'pe-textfield--disabled',\n    stateReadonly: 'pe-textfield--readonly',\n    stateInvalid: 'pe-textfield--invalid',\n    stateDirty: 'pe-textfield--dirty',\n    hasFloatingLabel: 'pe-textfield--floating-label',\n    isDense: 'pe-textfield--dense',\n    isRequired: 'pe-textfield--required',\n    hideRequiredChar: 'pe-textfield--no-char',\n    hasFullWidth: 'pe-textfield--full-width',\n    hasCounter: 'pe-textfield--counter',\n    hideSpinner: 'pe-textfield--hide-spinner',\n    hideClear: 'pe-textfield--hide-clear',\n    hideValidation: 'pe-textfield--hide-validation'\n};\n\nconst validateCustom = (ctrl, opts) => {\n    const state = opts.validate(ctrl.value);\n    return {\n        invalid: (state && !state.valid),\n        message: (state && state.error)\n    };\n};\n\nconst validateCounter = (ctrl, opts) => {\n    return {\n        invalid: (ctrl.value.length > opts.counter),\n        message: opts.error\n    };\n};\n\nconst validateHTML = (ctrl, opts) => {\n    return {\n        invalid: !ctrl.inputEl().checkValidity(),\n        message: opts.error\n    };\n};\n\nconst getValidStatus = (ctrl, opts) => {\n    let status = {\n        invalid: false,\n        message: undefined\n    };\n\n    // validateResetOnClear: reset validation when field is cleared\n    if (ctrl.touched && ctrl.isInvalid && ctrl.value.length === 0 && opts.validateResetOnClear) {\n        ctrl.touched = false;\n        ctrl.isInvalid = false;\n        ctrl.error = undefined;\n    }\n\n    if (!status.invalid && opts.counter) {\n        status = validateCounter(ctrl, opts);\n    }\n    if (!status.invalid && ctrl.inputEl() && ctrl.inputEl().checkValidity) {\n        status = validateHTML(ctrl, opts);\n    }\n    if (!status.invalid && opts.validate) {\n        status = validateCustom(ctrl, opts);\n    }\n    return status;\n};\n\nconst checkValidity = (ctrl, opts) => {\n    // default\n    const status = (!ctrl.touched && !opts.validateAtStart)\n        ? {\n            invalid: false,\n            message: undefined\n        }\n        : getValidStatus(ctrl, opts);\n    const previousInvalid = ctrl.isInvalid;\n    ctrl.error = status.message;\n    ctrl.isInvalid = status.invalid;\n    if (status.invalid !== previousInvalid) {\n        setTimeout(m.redraw, 0);\n    }\n\n    if (!status.invalid) {\n        ctrl.error = undefined;\n    }\n};\n\n// dirty = contains text\nconst checkDirty = (ctrl) => {\n    ctrl.isDirty = (ctrl.value.toString().length > 0);\n};\n\nconst updateState = (ctrl, opts) => {\n    checkValidity(ctrl, opts);\n    checkDirty(ctrl);\n};\n\nconst notifyState = (ctrl, opts) => {\n    if (opts.getState) {\n        // get status directly without updating controller\n        const status = getValidStatus(ctrl, opts);\n        opts.getState({\n            focus: ctrl.focus(),\n            dirty: ctrl.isDirty,\n            value: ctrl.value,\n            el: ctrl.inputEl(),\n            invalid: status.invalid,\n            error: status.error\n        });\n    }\n};\n\nconst ignoreEvent = (opts, name) => (opts.ignoreEvents && opts.ignoreEvents.indexOf(name) !== -1);\n\nconst createView = (ctrl, opts = {}) => {\n    // Early state update to prevent a flash (which would happen if the update is done in config)\n    updateState(ctrl, opts);\n\n    const isInvalid = ctrl.isInvalid;\n    const tag = opts.tag || 'div';\n    const type = (!opts.type || opts.type === 'submit' || opts.type === 'search') ? 'text' : opts.type;\n    const inputTag = opts.multiline ? 'textarea' : 'input';\n    const showError = isInvalid && ctrl.error;\n    const validates = opts.validate || opts.min || opts.max || opts.minlength || opts.required || opts.pattern;\n    const inactive = opts.disabled || opts.readonly;\n\n    if (opts.focus && !ctrl.focus() && !inactive) {\n        ctrl.focus(true);\n        if (ctrl.inputEl()) {\n            ctrl.inputEl().focus();\n        }\n    }\n\n    // Only update from outside if the field is not being edited\n    if (typeof opts.value === 'function' && ctrl.inputEl() && !ctrl.focus() && !inactive) {\n        const value = opts.value();\n        ctrl.value = value;\n        ctrl.touched = true;\n        updateState(ctrl, opts);\n        notifyState(ctrl, opts);\n        ctrl.inputEl().value = value;\n    }\n\n    const onBlur = (e) => {\n        ctrl.focus(false);\n        ctrl.touched = true;\n        ctrl.value = e.target.value;\n        updateState(ctrl, opts);\n        notifyState(ctrl, opts);\n        // same principle as onfocus\n        ctrl.el.classList.remove(CSS_CLASSES.stateFocused);\n    };\n\n    const props = {\n        class: [\n            CSS_CLASSES.block,\n            (isInvalid ? CSS_CLASSES.stateInvalid : ''),\n            (ctrl.focus() ? CSS_CLASSES.stateFocused : ''),\n            (opts.floatingLabel ? CSS_CLASSES.hasFloatingLabel : ''),\n            (opts.disabled ? CSS_CLASSES.stateDisabled : ''),\n            (opts.readonly ? CSS_CLASSES.stateReadonly : ''),\n            (ctrl.isDirty ? CSS_CLASSES.stateDirty : ''),\n            (opts.dense ? CSS_CLASSES.isDense : ''),\n            (opts.required ? CSS_CLASSES.isRequired : ''),\n            (opts.fullWidth ? CSS_CLASSES.hasFullWidth : ''),\n            (opts.counter ? CSS_CLASSES.hasCounter : ''),\n            (opts.hideSpinner !== false ? CSS_CLASSES.hideSpinner : ''),\n            (opts.hideClear !== false ? CSS_CLASSES.hideClear : ''),\n            (opts.hideValidation ? CSS_CLASSES.hideValidation : ''),\n            (opts.hideRequiredMark ? CSS_CLASSES.hideRequiredChar : ''),\n            opts.class\n        ].join(' '),\n        id: opts.id || '',\n        config: (el, inited, context, vdom) => {\n            if (inited) {\n                return;\n            }\n            if (opts.config) {\n                opts.config(el, inited, context, vdom);\n            }\n            ctrl.el = el;\n            if (!inactive) {\n                updateState(ctrl, opts);\n            }\n        }\n    };\n\n\n    const content = [\n        m('div', {\n            class: CSS_CLASSES.inputArea\n        }, [\n            opts.label ? m('label', {\n                class: CSS_CLASSES.label,\n                // In IE10 the label catches click events on the field\n                // the function causes the input to get focus\n\n                ['on' + startEventType]: () => {\n                    if (!inactive) {\n                        setTimeout(() => {\n                            ctrl.inputEl().focus();\n                        }, 0);\n                    }\n                }\n            }, opts.label) : null,\n            m(inputTag, Object.assign(\n                {},\n                {\n                    class: CSS_CLASSES.input,\n                    type,\n                    name: opts.name || '',\n                    disabled: opts.disabled\n                },\n\n                (!ignoreEvent(opts, 'onclick'))\n                    ? {\n                        onclick: () => {\n                            if (inactive) {\n                                return;\n                            }\n                            // in case the browser does not give the field focus,\n                            // for instance when the user tapped to the current field off screen\n                            ctrl.focus(true);\n                            notifyState(ctrl, opts);\n                        }\n                    }\n                    : null,\n\n                (!ignoreEvent(opts, 'onfocus'))\n                    ? {\n                        onfocus: () => {\n                            if (inactive) {\n                                return;\n                            }\n                            ctrl.focus(true);\n                            // set CSS class manually in case field gets focus but is off screen\n                            // and no redraw is triggered\n                            // at the next redraw ctrl.focus() will be read and the focus class be set\n                            // in the props.class statement\n                            if (ctrl.el) {\n                                ctrl.el.classList.add(CSS_CLASSES.stateFocused);\n                            }\n                            notifyState(ctrl, opts);\n                        }\n                    }\n                    : null,\n                    \n                // onblur defined in config\n\n                (!ignoreEvent(opts, 'oninput'))\n                    ? {\n                        oninput: (e) => {\n                            // default input event\n                            // may be overwritten by opts.events\n                            ctrl.value = e.target.value;\n                            // Don't set ctrl.touched to true to prevent error messages popping up while typing\n                            if (opts.validateOnInput) {\n                                ctrl.touched = true;\n                            }\n                            updateState(ctrl, opts);\n                            notifyState(ctrl, opts);\n                            if (opts.oninput) {\n                                opts.oninput(ctrl.value, e);\n                            }\n                        }\n                    }\n                    : null,\n\n                (!ignoreEvent(opts, 'onkeydown'))\n                    ? {\n                        onkeydown: (e) => {\n                            if (e.which === 13) {\n                                // ENTER\n                                ctrl.touched = true;\n                                updateState(ctrl, opts);\n                                notifyState(ctrl, opts);\n                            } else if (e.which === 27) {\n                                // ESCAPE\n                                ctrl.inputEl().blur(e);\n                            } else if (e.which === 9) {\n                                // TAB\n                                // Update after the blur event when TAB is used to leave the field and no other field will get focus.\n                                // Safari only needs 1 tick, but Chrome needs more than 150ms to create a distinctive new redraw event.\n                                // But we also may have buttons that change place (search field), a large timeout works better in general.\n                                setTimeout(() => {\n                                    m.redraw();\n                                    setTimeout(m.redraw, 250);\n                                }, 1);\n                            }\n                        }\n                    }\n                    : null,\n\n                {\n                    config: (el, inited, context) => {\n                        if (inited) {\n                            return;\n                        }\n                        ctrl.inputEl(el);\n                        el.value = ctrl.value;\n                        notifyState(ctrl, opts);\n                        if (!inactive) {\n                            if (!ignoreEvent(opts, 'onblur')) {\n                                // use event delegation for the blur event\n                                // so that click events bubble up\n                                // http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n                                el.addEventListener('blur', onBlur, true);\n                                context.onunload = function() {\n                                    el.removeEventListener('blur', onBlur, true);\n                                };\n                            }\n                        }\n                    }\n                },\n                opts.events ? opts.events : null, // NOTE: may overwrite oninput\n                (opts.readonly !== undefined) ? {readonly: true} : null,\n                (opts.pattern !== undefined) ? {pattern: opts.pattern} : null,\n                (opts.maxlength !== undefined) ? {maxlength: opts.maxlength} : null,\n                (opts.minlength !== undefined) ? {minlength: opts.minlength} : null,\n                (opts.max !== undefined) ? {max: opts.max} : null,\n                (opts.min !== undefined) ? {min: opts.min} : null,\n                (opts.autofocus !== undefined) ? {autofocus: opts.autofocus} : null,\n                (opts.required !== undefined) ? {required: opts.required} : null,\n                (opts.tabindex !== undefined) ? {tabindex: opts.tabindex} : null,\n                (opts.rows !== undefined) ? {rows: opts.rows} : null\n            ))\n        ]),\n        opts.counter ? m('div', {class: CSS_CLASSES.counter}, ctrl.value.length + ' / ' + opts.counter) : null,\n        (opts.help && !showError) ? m('div', {\n            class: [CSS_CLASSES.help, opts.focusHelp ? CSS_CLASSES.focusHelp : ''].join(' ')\n        }, opts.help) : null,\n        showError\n            ? m('div', {class: CSS_CLASSES.error}, ctrl.error)\n            : (validates && !opts.help)\n                ? m('div', {class: CSS_CLASSES.errorPlaceholder})\n                : null\n    ];\n    return m(tag, props, [opts.before, content, opts.after]);\n};\n\nconst component = {\n    controller: (opts = {}) => {\n        let value,\n            isInvalid = false,\n            touched = false, // true when any change is made\n            error = opts.error || '',\n            el,\n            inputEl = m.prop(),\n            hasFocus = opts.focus || false;\n\n        if (typeof opts.value === 'function') {\n            const v = opts.value();\n            value = (v !== undefined) ? v : '';\n        } else {\n            value = (opts.value !== undefined) ? opts.value : '';\n        }\n        if (value !== '') {\n            touched = true;\n        }\n\n        const focus = (state) => {\n            // read\n            if (state === undefined) {\n                return hasFocus;\n            }\n            // write\n            hasFocus = state;\n        };\n\n        return {\n            value,\n            error,\n            el,\n            inputEl,\n            focus,\n            isInvalid,\n            touched\n        };\n    },\n    view: (ctrl, opts = {}) => {\n        return createView(ctrl, opts);\n    }\n};\n\nexport default component;\n"]}