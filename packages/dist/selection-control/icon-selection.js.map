{"version":3,"sources":["../../src/src/selection-control/icon-selection.js"],"names":["CSS_CLASSES","box","button","buttonOn","buttonOff","createIcon","onOffType","opts","msvg","theme","class","icon","size","type","createSelection","checked","selectable","tag","content","ripple","center","disabled","inactive","iconButton"],"mappings":";;;;;;kQAAA;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAc;AAChBC,SAAK,iBADW;AAEhBC,YAAQ,oBAFQ;AAGhBC,cAAU,wBAHM;AAIhBC,eAAW;AAJK,CAApB;;AAOA,IAAMC,aAAa,SAAbA,UAAa,CAACC,SAAD,EAAYC,IAAZ,EAAqB;AACpC;AACA;AACA,WAAO,SACH,EADG,EAEHA,KAAKD,SAAL,IACMC,KAAKD,SAAL,CADN,GAEM;AACEE,cAAMD,KAAKE,KAAL,CAAWH,SAAX;AADR,KAJH,EAOH;AACII,eAAOH,KAAKG;AADhB,KAPG,EAUHH,KAAKI,IAVF,EAWHJ,KAAKK,IAAL,GACM;AACEC,cAAMN,KAAKK;AADb,KADN,GAIM,IAfH,CAAP;AAiBH,CApBD;;AAsBA,IAAME,kBAAkB,SAAlBA,eAAkB,CAACC,OAAD,EAAUR,IAAV,EAAmB;AACvC,QAAMS,aAAaT,KAAKS,UAAL,CAAgBD,OAAhB,CAAnB;AACA,WAAO,uBAAE,KAAF,EAAS;AACZL,eAAOV,YAAYC;AADP,KAAT,EAEJ,6CAAc,SACb,EADa,EAEb;AACIgB,aAAK,KADT;AAEIP,eAAOV,YAAYE,MAFvB;AAGIgB,iBAAS,CACL,uCAAQb,WAAW,QAAX,EAAqB,SACzB,EADyB,EAEzB;AACIK,mBAAOV,YAAYG;AADvB,SAFyB,EAKzBI,IALyB,CAArB,CAAR,CADK,EAQL,uCAAQF,WAAW,SAAX,EAAsB,SAC1B,EAD0B,EAE1B;AACIK,mBAAOV,YAAYI;AADvB,SAF0B,EAK1BG,IAL0B,CAAtB,CAAR,CARK,CAHb;AAmBIY,gBAAQ;AACJC,oBAAQ;AADJ,SAnBZ;AAsBIC,kBAAUd,KAAKc,QAtBnB;AAuBIC,kBAAU,CAACN;AAvBf,KAFa,EA2BbT,KAAKgB,UA3BQ,CAAd,CAFI,CAAP;AA+BH,CAjCD;;kBAmCeT,e","file":"icon-selection.js","sourcesContent":["// Helper function for checkbox and radio button\nimport '../common/object.assign';\nimport m from 'mithril';\nimport icon from '../icon/icon';\nimport iconButton from '../icon-button/icon-button';\n\nconst CSS_CLASSES = {\n    box: 'pe-control__box',\n    button: 'pe-control__button',\n    buttonOn: 'pe-control__button--on',\n    buttonOff: 'pe-control__button--off'\n};\n\nconst createIcon = (onOffType, opts) => {\n    // if opts.iconOn/Off is passed, use that icon options object and ignore size\n    // otherwise create a new object\n    return Object.assign(\n        {},\n        opts[onOffType]\n            ? opts[onOffType]\n            : {\n                msvg: opts.theme[onOffType]\n            },\n        {\n            class: opts.class\n        },\n        opts.icon,\n        opts.size\n            ? {\n                type: opts.size\n            }\n            : null\n    );\n};\n\nconst createSelection = (checked, opts) => {\n    const selectable = opts.selectable(checked);\n    return m('div', {\n        class: CSS_CLASSES.box\n    }, m(iconButton, Object.assign(\n        {},\n        {\n            tag: 'div',\n            class: CSS_CLASSES.button,\n            content: [\n                m(icon, createIcon('iconOn', Object.assign(\n                    {},\n                    {\n                        class: CSS_CLASSES.buttonOn\n                    },\n                    opts\n                ))),\n                m(icon, createIcon('iconOff', Object.assign(\n                    {},\n                    {\n                        class: CSS_CLASSES.buttonOff\n                    },\n                    opts\n                )))\n            ],\n            ripple: {\n                center: true\n            },\n            disabled: opts.disabled,\n            inactive: !selectable\n        },\n        opts.iconButton\n    )));\n};\n\nexport default createSelection;\n"]}