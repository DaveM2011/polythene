{"version":3,"sources":["../../src/src/selection-control/selection-control.js"],"names":["CSS_CLASSES","block","label","input","box","on","off","disabled","inactive","small","regular","medium","large","typeClasses","classForType","mode","createView","ctrl","opts","checked","setChecked","selectable","tag","name","props","class","defaultClass","size","join","id","config","el","inited","context","vdom","events","content","value","type","tabindex","setInputEl","onclick","toggle","selectionView","before","after","component","controller","defaultChecked","inputEl","setInputElChecked","isChecked","getOptsChecked","v","undefined","getState","view"],"mappings":"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","file":"selection-control.js","sourcesContent":["import '../common/object.assign';\nimport m from 'mithril';\nimport './theme';\n\nconst CSS_CLASSES = {\n    block: 'pe-control',\n    label: 'pe-control__label',\n    input: 'pe-control__input',\n    box: 'pe-control__box',\n    on: 'pe-control--on',\n    off: 'pe-control--off',\n    disabled: 'pe-control--disabled',\n    inactive: 'pe-control--inactive',\n    small: 'pe-control--small',\n    regular: 'pe-control--regular',\n    medium: 'pe-control--medium',\n    large: 'pe-control--large'\n};\n\nconst typeClasses = {\n    small: CSS_CLASSES.small,\n    regular: CSS_CLASSES.regular,\n    medium: CSS_CLASSES.medium,\n    large: CSS_CLASSES.large\n};\n\nconst classForType = (mode = 'regular') => {\n    return typeClasses[mode];\n};\n\nconst createView = (ctrl, opts = {}) => {\n    if (typeof opts.checked === 'function') {\n        ctrl.setChecked(opts.checked());\n    }\n    const checked = ctrl.checked();\n    const selectable = opts.selectable(checked);\n    const inactive = opts.disabled || !selectable;\n    const tag = opts.tag || 'div';\n    const name = opts.name || '';\n    const props = Object.assign(\n        {},\n        {\n            class: [\n                CSS_CLASSES.block,\n                opts.defaultClass,\n                (checked ? CSS_CLASSES.on : CSS_CLASSES.off),\n                (opts.disabled ? CSS_CLASSES.disabled: null),\n                (inactive ? CSS_CLASSES.inactive: null),\n                classForType(opts.size),\n                opts.class\n            ].join(' '),\n            id: opts.id || '',\n            config: (el, inited, context, vdom) => {\n                if (inited) {\n                    return;\n                }\n                if (opts.config) {\n                    opts.config(el, inited, context, vdom);\n                }\n            }\n        },\n        opts.events ? opts.events : null\n    );\n    const content = [\n        m('input', {\n            class: CSS_CLASSES.input,\n            name,\n            value: ctrl.value(),\n            type: opts.type, // set by checkbox / radio-button\n            tabindex: -1, // set in selectionView / icon-button\n            checked,\n            config: (el, inited) => {\n                if (inited) return;\n                ctrl.setInputEl(el);\n            }\n        }),\n        m('label', Object.assign(\n            {},\n            {\n                class: CSS_CLASSES.label,\n                tabindex: -1, // set in selectionView\n            },\n            inactive\n                ? null\n                : {\n                    onclick: () => (ctrl.toggle())\n                }\n        ), [\n            opts.selectionView ? opts.selectionView(checked, opts) : null,\n            opts.label ? m('span', opts.label) : null\n        ])\n    ];\n    return m(tag, props, [opts.before, content, opts.after]);\n};\n\nconst component = {\n    controller: (opts = {}) => {\n        // Because this module also supports radio buttons (paired control elements)\n        // we won't keep a separate 'checked' value but instead keep the checked value\n        // as a HTMLElement checked state.\n        const defaultChecked = false;\n        let value = opts.value || '1';\n        let inputEl;\n\n        const setInputElChecked = (isChecked) => {\n            if (inputEl) {\n                inputEl.checked = isChecked;\n            }\n        };\n\n        const getOptsChecked = () => {\n            if (typeof opts.checked === 'function') {\n                const v = opts.checked();\n                return (v !== undefined) ? v : defaultChecked;\n            } else {\n                return (opts.checked !== undefined) ? opts.checked : defaultChecked;\n            }\n        };\n\n        const setInputEl = (el) => {\n            inputEl = el;\n            setInputElChecked(getOptsChecked());\n        };\n\n        const setChecked = (isChecked) => {\n            setInputElChecked(isChecked);\n            if (opts.getState) {\n                opts.getState({\n                    checked: inputEl ? inputEl.checked : getOptsChecked(),\n                    value,\n                    el: inputEl,\n                });\n            }\n        };\n\n        const toggle = () => (setChecked(!inputEl.checked));\n\n        return {\n            setInputEl,\n            setChecked,\n            checked: () => (inputEl ? inputEl.checked : getOptsChecked()),\n            toggle,\n            value: () => (value)\n        };\n    },\n    view: (ctrl, opts = {}) => {\n        return createView(ctrl, opts);\n    }\n};\n\nexport default component;\n"]}